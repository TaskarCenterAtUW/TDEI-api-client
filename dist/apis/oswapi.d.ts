/**
 * TDEI Gateway API
 * This is an API for publishing data to the Transportation Data Equity Initiative (TDEI) data system. This API is intended for applications producing data for and consuming data from the TDEI system. This API supports publishing of GTFS-Pathways, GTFS-Flex v2 and OpenSidewalks data to the TDEI.
 *
 * OpenAPI spec version: v0.1
 * Contact: placeholder_support@transequity.cs.washington.edu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { OSWConfidenceRequest } from '../models';
import { OSWConfidenceResponse } from '../models';
import { OSWConfidenceStatus } from '../models';
import { OSWFormatResponse } from '../models';
import { OSWFormatStatusResponse } from '../models';
import { OswDownload } from '../models';
import { RecordPublishStatus } from '../models';
import { RecordUploadStatus } from '../models';
import { ValidationStatus } from '../models';
import { VersionList } from '../models';
/**
 * OSWApi - axios parameter creator
 * @export
 */
export declare const OSWApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns boolean true if the action is successful
     * @summary Invalidates the OSW record
     * @param {string} tdei_record_id tdei_record_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteOsw: (tdei_record_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetches the status of confidence request job.
     * @summary Get the status of confidence request
     * @param {string} job_id job_id for confidence request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOSWConfidenceStatus: (job_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * returns a specific osw file as zip containing metadata, dataset, and changeset identified by the tdei_record_id
     * @summary downloads the OSW files as zip
     * @param {string} tdei_record_id tdei_record_id for a file, represented as a uuid
     * @param {string} [format] File format to download. Default to osw
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOswFile: (tdei_record_id: string, format?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetches the status of an published record
     * @summary Get the publish status
     * @param {string} tdei_record_id tdei_record_id received during upload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPublishStatus: (tdei_record_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetches the status of an uploaded record
     * @summary Get the upload status
     * @param {string} tdei_record_id tdei_record_id received during upload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUploadStatus: (tdei_record_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetches the status of the validation request job.
     * @summary Get the status of the validation request.
     * @param {string} job_id job_id for the validation request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getValidateStatus: (job_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This endpoint returns a list of url to zipped geojson files with osw data that meet the specified criteria. Criteria that can be specified include: a dataset area (polygon), minimum confidence level and osw version.
     * @summary List osw files meeting criteria.
     * @param {Array<number>} [bbox] A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.
     * @param {string} [name] dataset name or title.
     * @param {string} [version] dataset version.
     * @param {string} [data_source] data source of the dataset.
     * @param {string} [collection_method] Method by which the data was collected.
     * @param {string} [collected_by] Collection agency or person.
     * @param {string} [derived_from_dataset_id] Derived from dataset id.
     * @param {string} [collection_date] Collection date time
     * @param {number} [confidence_level] Minimum confidence level required. Data returned will be at this confidence level or higher. Confidence level range is: 0 (very low confidence) to 100 (very high confidence).
     * @param {string} [status] request for files based on status. The default setting is &#x27;Publish&#x27;, limiting the list to published files only. When set to &#x27;pre-release&#x27;, it includes pre-release files for the project groups user belongs.
     * @param {string} [osw_schema_version] version name of the osw schema version that the application requests. list of versions can be found with /api/v1/osw/versions.
     * @param {string} [tdei_project_group_id] tdei-assigned project group id. Represented as a UUID.
     * @param {string} [valid_from] Valid from date time. date-time for which the caller is interested in obtaining files.
     * @param {string} [valid_to] date-time for which the caller is interested in obtaining files. all files that are valid at the specified date-time and meet the other criteria will be returned.
     * @param {string} [tdei_record_id] tdei_record_id, unique id represents file.
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listOswFiles: (bbox?: Array<number>, name?: string, version?: string, data_source?: string, collection_method?: string, collected_by?: string, derived_from_dataset_id?: string, collection_date?: string, confidence_level?: number, status?: string, osw_schema_version?: string, tdei_project_group_id?: string, valid_from?: string, valid_to?: string, tdei_record_id?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Lists the versions of OSW data which are supported by TDEI.
     * @summary List available OSW versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listOswVersions: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Initiates the confidence calculation of a tdei_record_id as mentioned in the body
     * @summary Initiate Confidence calculation for a dataset
     * @param {OSWConfidenceRequest} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oswConfidenceCalculate: (body: OSWConfidenceRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Downloads the converted file from the job
     * @summary Downloads the converted file
     * @param {string} job_id job_id for format request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oswFormatDownload: (job_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Summary of the formatting request
     * @summary Fetch status of format request
     * @param {string} job_id job_id for format request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oswFormatStatus: (job_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * upload a file and request for file format conversion
     * @summary OSW reformatting on demand
     * @param {string} source
     * @param {string} target
     * @param {Blob} file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oswOnDemandFormatForm: (source: string, target: string, file: Blob, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Publishes an OSW dataset that was previously uploaded via the [POST] /osw endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers.
     * @summary Publishes the OSW dataset for the tdei_record_id
     * @param {string} tdei_record_id tdei_record_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishOswFile: (tdei_record_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This path allows a user to upload pre-release osw dataset. The caller must provide metadata about the file - includes information about how and when the data was collected and valid dates of the file. Returns the tdei_record_id of the uploaded file.
     * @summary upload a pre-release of OSW dataset.
     * @param {Blob} dataset
     * @param {Blob} metadata
     * @param {Blob} changeset
     * @param {string} tdei_project_group_id tdei project group id. Represented as UUID.
     * @param {string} tdei_service_id tdei service id associated with project group id. Represented as UUID.
     * @param {string} [derived_from_dataset_id] Dataset id from which this dataset was derived
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadOswFileForm: (dataset: Blob, metadata: Blob, changeset: Blob, tdei_project_group_id: string, tdei_service_id: string, derived_from_dataset_id?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Allows a user to validate osw dataset to check the correctness of data. Returns the job_id associated with validation job.
     * @summary Validates the osw dataset.
     * @param {Blob} dataset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateOswFileForm: (dataset: Blob, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * OSWApi - functional programming interface
 * @export
 */
export declare const OSWApiFp: (configuration?: Configuration) => {
    /**
     * Returns boolean true if the action is successful
     * @summary Invalidates the OSW record
     * @param {string} tdei_record_id tdei_record_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteOsw(tdei_record_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<boolean>>>;
    /**
     * Fetches the status of confidence request job.
     * @summary Get the status of confidence request
     * @param {string} job_id job_id for confidence request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOSWConfidenceStatus(job_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<OSWConfidenceStatus>>>;
    /**
     * returns a specific osw file as zip containing metadata, dataset, and changeset identified by the tdei_record_id
     * @summary downloads the OSW files as zip
     * @param {string} tdei_record_id tdei_record_id for a file, represented as a uuid
     * @param {string} [format] File format to download. Default to osw
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOswFile(tdei_record_id: string, format?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     * Fetches the status of an published record
     * @summary Get the publish status
     * @param {string} tdei_record_id tdei_record_id received during upload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPublishStatus(tdei_record_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<RecordPublishStatus>>>;
    /**
     * Fetches the status of an uploaded record
     * @summary Get the upload status
     * @param {string} tdei_record_id tdei_record_id received during upload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUploadStatus(tdei_record_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<RecordUploadStatus>>>;
    /**
     * Fetches the status of the validation request job.
     * @summary Get the status of the validation request.
     * @param {string} job_id job_id for the validation request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getValidateStatus(job_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ValidationStatus>>>;
    /**
     * This endpoint returns a list of url to zipped geojson files with osw data that meet the specified criteria. Criteria that can be specified include: a dataset area (polygon), minimum confidence level and osw version.
     * @summary List osw files meeting criteria.
     * @param {Array<number>} [bbox] A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.
     * @param {string} [name] dataset name or title.
     * @param {string} [version] dataset version.
     * @param {string} [data_source] data source of the dataset.
     * @param {string} [collection_method] Method by which the data was collected.
     * @param {string} [collected_by] Collection agency or person.
     * @param {string} [derived_from_dataset_id] Derived from dataset id.
     * @param {string} [collection_date] Collection date time
     * @param {number} [confidence_level] Minimum confidence level required. Data returned will be at this confidence level or higher. Confidence level range is: 0 (very low confidence) to 100 (very high confidence).
     * @param {string} [status] request for files based on status. The default setting is &#x27;Publish&#x27;, limiting the list to published files only. When set to &#x27;pre-release&#x27;, it includes pre-release files for the project groups user belongs.
     * @param {string} [osw_schema_version] version name of the osw schema version that the application requests. list of versions can be found with /api/v1/osw/versions.
     * @param {string} [tdei_project_group_id] tdei-assigned project group id. Represented as a UUID.
     * @param {string} [valid_from] Valid from date time. date-time for which the caller is interested in obtaining files.
     * @param {string} [valid_to] date-time for which the caller is interested in obtaining files. all files that are valid at the specified date-time and meet the other criteria will be returned.
     * @param {string} [tdei_record_id] tdei_record_id, unique id represents file.
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listOswFiles(bbox?: Array<number>, name?: string, version?: string, data_source?: string, collection_method?: string, collected_by?: string, derived_from_dataset_id?: string, collection_date?: string, confidence_level?: number, status?: string, osw_schema_version?: string, tdei_project_group_id?: string, valid_from?: string, valid_to?: string, tdei_record_id?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<OswDownload>>>>;
    /**
     * Lists the versions of OSW data which are supported by TDEI.
     * @summary List available OSW versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listOswVersions(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<VersionList>>>;
    /**
     * Initiates the confidence calculation of a tdei_record_id as mentioned in the body
     * @summary Initiate Confidence calculation for a dataset
     * @param {OSWConfidenceRequest} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oswConfidenceCalculate(body: OSWConfidenceRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<OSWConfidenceResponse>>>;
    /**
     * Downloads the converted file from the job
     * @summary Downloads the converted file
     * @param {string} job_id job_id for format request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oswFormatDownload(job_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     * Summary of the formatting request
     * @summary Fetch status of format request
     * @param {string} job_id job_id for format request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oswFormatStatus(job_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<OSWFormatStatusResponse>>>;
    /**
     * upload a file and request for file format conversion
     * @summary OSW reformatting on demand
     * @param {string} source
     * @param {string} target
     * @param {Blob} file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oswOnDemandFormatForm(source: string, target: string, file: Blob, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<OSWFormatResponse>>>;
    /**
     * Publishes an OSW dataset that was previously uploaded via the [POST] /osw endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers.
     * @summary Publishes the OSW dataset for the tdei_record_id
     * @param {string} tdei_record_id tdei_record_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishOswFile(tdei_record_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<string>>>;
    /**
     * This path allows a user to upload pre-release osw dataset. The caller must provide metadata about the file - includes information about how and when the data was collected and valid dates of the file. Returns the tdei_record_id of the uploaded file.
     * @summary upload a pre-release of OSW dataset.
     * @param {Blob} dataset
     * @param {Blob} metadata
     * @param {Blob} changeset
     * @param {string} tdei_project_group_id tdei project group id. Represented as UUID.
     * @param {string} tdei_service_id tdei service id associated with project group id. Represented as UUID.
     * @param {string} [derived_from_dataset_id] Dataset id from which this dataset was derived
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadOswFileForm(dataset: Blob, metadata: Blob, changeset: Blob, tdei_project_group_id: string, tdei_service_id: string, derived_from_dataset_id?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<string>>>;
    /**
     * Allows a user to validate osw dataset to check the correctness of data. Returns the job_id associated with validation job.
     * @summary Validates the osw dataset.
     * @param {Blob} dataset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateOswFileForm(dataset: Blob, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<string>>>;
};
/**
 * OSWApi - factory interface
 * @export
 */
export declare const OSWApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns boolean true if the action is successful
     * @summary Invalidates the OSW record
     * @param {string} tdei_record_id tdei_record_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteOsw(tdei_record_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<boolean>>;
    /**
     * Fetches the status of confidence request job.
     * @summary Get the status of confidence request
     * @param {string} job_id job_id for confidence request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOSWConfidenceStatus(job_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<OSWConfidenceStatus>>;
    /**
     * returns a specific osw file as zip containing metadata, dataset, and changeset identified by the tdei_record_id
     * @summary downloads the OSW files as zip
     * @param {string} tdei_record_id tdei_record_id for a file, represented as a uuid
     * @param {string} [format] File format to download. Default to osw
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOswFile(tdei_record_id: string, format?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Fetches the status of an published record
     * @summary Get the publish status
     * @param {string} tdei_record_id tdei_record_id received during upload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPublishStatus(tdei_record_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<RecordPublishStatus>>;
    /**
     * Fetches the status of an uploaded record
     * @summary Get the upload status
     * @param {string} tdei_record_id tdei_record_id received during upload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUploadStatus(tdei_record_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<RecordUploadStatus>>;
    /**
     * Fetches the status of the validation request job.
     * @summary Get the status of the validation request.
     * @param {string} job_id job_id for the validation request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getValidateStatus(job_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<ValidationStatus>>;
    /**
     * This endpoint returns a list of url to zipped geojson files with osw data that meet the specified criteria. Criteria that can be specified include: a dataset area (polygon), minimum confidence level and osw version.
     * @summary List osw files meeting criteria.
     * @param {Array<number>} [bbox] A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.
     * @param {string} [name] dataset name or title.
     * @param {string} [version] dataset version.
     * @param {string} [data_source] data source of the dataset.
     * @param {string} [collection_method] Method by which the data was collected.
     * @param {string} [collected_by] Collection agency or person.
     * @param {string} [derived_from_dataset_id] Derived from dataset id.
     * @param {string} [collection_date] Collection date time
     * @param {number} [confidence_level] Minimum confidence level required. Data returned will be at this confidence level or higher. Confidence level range is: 0 (very low confidence) to 100 (very high confidence).
     * @param {string} [status] request for files based on status. The default setting is &#x27;Publish&#x27;, limiting the list to published files only. When set to &#x27;pre-release&#x27;, it includes pre-release files for the project groups user belongs.
     * @param {string} [osw_schema_version] version name of the osw schema version that the application requests. list of versions can be found with /api/v1/osw/versions.
     * @param {string} [tdei_project_group_id] tdei-assigned project group id. Represented as a UUID.
     * @param {string} [valid_from] Valid from date time. date-time for which the caller is interested in obtaining files.
     * @param {string} [valid_to] date-time for which the caller is interested in obtaining files. all files that are valid at the specified date-time and meet the other criteria will be returned.
     * @param {string} [tdei_record_id] tdei_record_id, unique id represents file.
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listOswFiles(bbox?: Array<number>, name?: string, version?: string, data_source?: string, collection_method?: string, collected_by?: string, derived_from_dataset_id?: string, collection_date?: string, confidence_level?: number, status?: string, osw_schema_version?: string, tdei_project_group_id?: string, valid_from?: string, valid_to?: string, tdei_record_id?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<OswDownload>>>;
    /**
     * Lists the versions of OSW data which are supported by TDEI.
     * @summary List available OSW versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listOswVersions(options?: AxiosRequestConfig): Promise<AxiosResponse<VersionList>>;
    /**
     * Initiates the confidence calculation of a tdei_record_id as mentioned in the body
     * @summary Initiate Confidence calculation for a dataset
     * @param {OSWConfidenceRequest} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oswConfidenceCalculate(body: OSWConfidenceRequest, options?: AxiosRequestConfig): Promise<AxiosResponse<OSWConfidenceResponse>>;
    /**
     * Downloads the converted file from the job
     * @summary Downloads the converted file
     * @param {string} job_id job_id for format request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oswFormatDownload(job_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Summary of the formatting request
     * @summary Fetch status of format request
     * @param {string} job_id job_id for format request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oswFormatStatus(job_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<OSWFormatStatusResponse>>;
    /**
     * upload a file and request for file format conversion
     * @summary OSW reformatting on demand
     * @param {string} source
     * @param {string} target
     * @param {Blob} file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    oswOnDemandFormatForm(source: string, target: string, file: Blob, options?: AxiosRequestConfig): Promise<AxiosResponse<OSWFormatResponse>>;
    /**
     * Publishes an OSW dataset that was previously uploaded via the [POST] /osw endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers.
     * @summary Publishes the OSW dataset for the tdei_record_id
     * @param {string} tdei_record_id tdei_record_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishOswFile(tdei_record_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * This path allows a user to upload pre-release osw dataset. The caller must provide metadata about the file - includes information about how and when the data was collected and valid dates of the file. Returns the tdei_record_id of the uploaded file.
     * @summary upload a pre-release of OSW dataset.
     * @param {Blob} dataset
     * @param {Blob} metadata
     * @param {Blob} changeset
     * @param {string} tdei_project_group_id tdei project group id. Represented as UUID.
     * @param {string} tdei_service_id tdei service id associated with project group id. Represented as UUID.
     * @param {string} [derived_from_dataset_id] Dataset id from which this dataset was derived
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadOswFileForm(dataset: Blob, metadata: Blob, changeset: Blob, tdei_project_group_id: string, tdei_service_id: string, derived_from_dataset_id?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * Allows a user to validate osw dataset to check the correctness of data. Returns the job_id associated with validation job.
     * @summary Validates the osw dataset.
     * @param {Blob} dataset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateOswFileForm(dataset: Blob, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
};
/**
 * OSWApi - object-oriented interface
 * @export
 * @class OSWApi
 * @extends {BaseAPI}
 */
export declare class OSWApi extends BaseAPI {
    /**
     * Returns boolean true if the action is successful
     * @summary Invalidates the OSW record
     * @param {string} tdei_record_id tdei_record_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    deleteOsw(tdei_record_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<boolean>>;
    /**
     * Fetches the status of confidence request job.
     * @summary Get the status of confidence request
     * @param {string} job_id job_id for confidence request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    getOSWConfidenceStatus(job_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<OSWConfidenceStatus>>;
    /**
     * returns a specific osw file as zip containing metadata, dataset, and changeset identified by the tdei_record_id
     * @summary downloads the OSW files as zip
     * @param {string} tdei_record_id tdei_record_id for a file, represented as a uuid
     * @param {string} [format] File format to download. Default to osw
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    getOswFile(tdei_record_id: string, format?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Fetches the status of an published record
     * @summary Get the publish status
     * @param {string} tdei_record_id tdei_record_id received during upload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    getPublishStatus(tdei_record_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<RecordPublishStatus>>;
    /**
     * Fetches the status of an uploaded record
     * @summary Get the upload status
     * @param {string} tdei_record_id tdei_record_id received during upload
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    getUploadStatus(tdei_record_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<RecordUploadStatus>>;
    /**
     * Fetches the status of the validation request job.
     * @summary Get the status of the validation request.
     * @param {string} job_id job_id for the validation request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    getValidateStatus(job_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<ValidationStatus>>;
    /**
     * This endpoint returns a list of url to zipped geojson files with osw data that meet the specified criteria. Criteria that can be specified include: a dataset area (polygon), minimum confidence level and osw version.
     * @summary List osw files meeting criteria.
     * @param {Array<number>} [bbox] A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.
     * @param {string} [name] dataset name or title.
     * @param {string} [version] dataset version.
     * @param {string} [data_source] data source of the dataset.
     * @param {string} [collection_method] Method by which the data was collected.
     * @param {string} [collected_by] Collection agency or person.
     * @param {string} [derived_from_dataset_id] Derived from dataset id.
     * @param {string} [collection_date] Collection date time
     * @param {number} [confidence_level] Minimum confidence level required. Data returned will be at this confidence level or higher. Confidence level range is: 0 (very low confidence) to 100 (very high confidence).
     * @param {string} [status] request for files based on status. The default setting is &#x27;Publish&#x27;, limiting the list to published files only. When set to &#x27;pre-release&#x27;, it includes pre-release files for the project groups user belongs.
     * @param {string} [osw_schema_version] version name of the osw schema version that the application requests. list of versions can be found with /api/v1/osw/versions.
     * @param {string} [tdei_project_group_id] tdei-assigned project group id. Represented as a UUID.
     * @param {string} [valid_from] Valid from date time. date-time for which the caller is interested in obtaining files.
     * @param {string} [valid_to] date-time for which the caller is interested in obtaining files. all files that are valid at the specified date-time and meet the other criteria will be returned.
     * @param {string} [tdei_record_id] tdei_record_id, unique id represents file.
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    listOswFiles(bbox?: Array<number>, name?: string, version?: string, data_source?: string, collection_method?: string, collected_by?: string, derived_from_dataset_id?: string, collection_date?: string, confidence_level?: number, status?: string, osw_schema_version?: string, tdei_project_group_id?: string, valid_from?: string, valid_to?: string, tdei_record_id?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<OswDownload>>>;
    /**
     * Lists the versions of OSW data which are supported by TDEI.
     * @summary List available OSW versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    listOswVersions(options?: AxiosRequestConfig): Promise<AxiosResponse<VersionList>>;
    /**
     * Initiates the confidence calculation of a tdei_record_id as mentioned in the body
     * @summary Initiate Confidence calculation for a dataset
     * @param {OSWConfidenceRequest} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    oswConfidenceCalculate(body: OSWConfidenceRequest, options?: AxiosRequestConfig): Promise<AxiosResponse<OSWConfidenceResponse>>;
    /**
     * Downloads the converted file from the job
     * @summary Downloads the converted file
     * @param {string} job_id job_id for format request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    oswFormatDownload(job_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Summary of the formatting request
     * @summary Fetch status of format request
     * @param {string} job_id job_id for format request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    oswFormatStatus(job_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<OSWFormatStatusResponse>>;
    /**
     * upload a file and request for file format conversion
     * @summary OSW reformatting on demand
     * @param {string} source
     * @param {string} target
     * @param {Blob} file
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    oswOnDemandFormatForm(source: string, target: string, file: Blob, options?: AxiosRequestConfig): Promise<AxiosResponse<OSWFormatResponse>>;
    /**
     * Publishes an OSW dataset that was previously uploaded via the [POST] /osw endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers.
     * @summary Publishes the OSW dataset for the tdei_record_id
     * @param {string} tdei_record_id tdei_record_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    publishOswFile(tdei_record_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * This path allows a user to upload pre-release osw dataset. The caller must provide metadata about the file - includes information about how and when the data was collected and valid dates of the file. Returns the tdei_record_id of the uploaded file.
     * @summary upload a pre-release of OSW dataset.
     * @param {Blob} dataset
     * @param {Blob} metadata
     * @param {Blob} changeset
     * @param {string} tdei_project_group_id tdei project group id. Represented as UUID.
     * @param {string} tdei_service_id tdei service id associated with project group id. Represented as UUID.
     * @param {string} [derived_from_dataset_id] Dataset id from which this dataset was derived
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    uploadOswFileForm(dataset: Blob, metadata: Blob, changeset: Blob, tdei_project_group_id: string, tdei_service_id: string, derived_from_dataset_id?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * Allows a user to validate osw dataset to check the correctness of data. Returns the job_id associated with validation job.
     * @summary Validates the osw dataset.
     * @param {Blob} dataset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OSWApi
     */
    validateOswFileForm(dataset: Blob, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
}
