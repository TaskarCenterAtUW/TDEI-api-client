/**
 * TDEI Gateway Dev API
 * This is an API for interacting with the Transportation Data Equity Initiative (TDEI) system. It is intended for applications submitting data to and consuming data from the TDEI system. We currently support GTFS-Pathways, GTFS-Flex and OpenSidewalks (OSW) data schemas.
 *
 * OpenAPI spec version: v0.1
 * Contact: admin@tdei.us
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { APIVersionList } from '../models';
import { DatasetItem } from '../models';
import { JobDetails } from '../models';
import { ProjectGroup } from '../models';
import { ServiceModel } from '../models';
/**
 * CommonAPIsApi - axios parameter creator
 * @export
 */
export declare const CommonAPIsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Cloning of a dataset lets one to use the dataset being cloned as the base for a new dataset without having to upload the dataset. This operation clones the datafiles in the dataset `tdei_dataset_id` to the designated project group `tdei_project_group_id` and service `tdei_service_id`, and uses the metadata file provided along with the API as the metadata. Returns cloned dataset id if the action is successful.
     * @summary Clones the provided dataset to the designated project group and service.
     * @param {Blob} file
     * @param {string} tdei_dataset_id Valid TDEI dataset id to be cloned.
     * @param {string} tdei_project_group_id Valid TDEI project group id.
     * @param {string} tdei_service_id Valid TDEI service id associated with the project group.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cloneDatasetForm: (file: Blob, tdei_dataset_id: string, tdei_project_group_id: string, tdei_service_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Deletes the dataset from TDEI system. This operation cannot be undone.
     * @summary Deletes the Dataset
     * @param {string} tdei_dataset_id Valid TDEI Dataset ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteDataset: (tdei_dataset_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Updates the metadata of a dataset with the metadata in the provided file. Returns status 200 if the action is successful.
     * @summary Updates the metadata of a given dataset
     * @param {Blob} file
     * @param {string} tdei_dataset_id Must be a valid TDEI dataset id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    editMetadataForm: (file: Blob, tdei_dataset_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Downloads the output file generated by the job
     * @summary Downloads the job output file
     * @param {string} job_id job_id uniquely represents the job request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    jobDownload: (job_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of supported versions of the TDEI API.
     * @summary List TDEI supported API versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listApiVersions: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * <p>This API returns filtered and sorted lists of TDEI datasets. The matching behavior of filter parameters may vary depending on the attribute type.</p> <p>By default results will include all datasets in released status AND all dataset in pre-release status within the requesting user's project group. This behavior can be controlled by the status parameter.  In no situation can a user see pre-release datasets from a project group the user is not part of.</p>    <b>Primary use cases include</b>: <ul> <li><b>name search</b>: Given a search string X, return all datasets with a name that contains the search string X </li> <li><b>dataset id lookup</b>: Given a tdei_dataset_id, return the dataset with the matching id </li> <li> <b>bounding box</b>: Given xmin, xmax, ymin, ymax, return datasets with dataset_area overlapping the bounding box </li> </ul>    <b>Sorting</b>:<br> <p>Users can sort datasets by 'valid_to', 'valid_from', 'uploaded date', 'project group name', and 'status'.</p>
     * @summary Lists the TDEI datasets in the system.
     * @param {string} [data_type] &lt;strong&gt;Type of the dataset&lt;/strong&gt;. Filters datasets by matching the exact value from the supported enumeration.
     * @param {string} [status] &lt;p&gt;&lt;strong&gt;Status of the dataset:&lt;/strong&gt; Filters datasets by status â€” &lt;code&gt;All&lt;/code&gt; (default) returns released datasets and pre-release datasets from the user&#x27;s project groups; &lt;code&gt;Pre-Release&lt;/code&gt; and &lt;code&gt;Publish&lt;/code&gt; return only datasets in that status from affiliated project groups.&lt;/p&gt;
     * @param {string} [name] &lt;p&gt;&lt;strong&gt;Dataset name or title:&lt;/strong&gt; Filters datasets where the name or title contains the specified search text.&lt;/p&gt;
     * @param {string} [version] &lt;p&gt;&lt;strong&gt;Dataset version:&lt;/strong&gt; Filters datasets using an exact match on the version value.&lt;/p&gt;
     * @param {string} [data_source] &lt;p&gt;&lt;strong&gt;Data source:&lt;/strong&gt; Filters datasets by matching the exact value from the supported enumeration.&lt;/p&gt;
     * @param {string} [collection_method] &lt;p&gt;&lt;strong&gt;Collection method:&lt;/strong&gt; Filters datasets by matching the exact value from the supported enumeration.&lt;/p&gt;
     * @param {string} [collected_by] &lt;p&gt;&lt;strong&gt;Collected by:&lt;/strong&gt; Filters datasets using an exact match on the collection agency or person&#x27;s name.&lt;/p&gt;
     * @param {string} [derived_from_dataset_id] &lt;strong&gt;derived_from_dataset_id:&lt;/strong&gt; Filters datasets that are derived from the specified dataset ID. Exact match.
     * @param {string} [collection_date] &lt;strong&gt;collection_date:&lt;/strong&gt; Filters datasets collected after the specified date and time.
     * @param {number} [confidence_level] &lt;strong&gt;Confidence level:&lt;/strong&gt; Minimum confidence level required. Returns datasets with confidence level greater than the specified value. Range: 0 (very low) to 100 (very high).
     * @param {string} [schema_version] &lt;strong&gt;Schema version:&lt;/strong&gt; Filters datasets that match the requested data type schema version. The list of supported versions can be found at &lt;code&gt;/api/v1/{data_type}/versions&lt;/code&gt;.
     * @param {string} [tdei_project_group_id] &lt;strong&gt;TDEI project group ID:&lt;/strong&gt; Filters datasets that belong to the specified project group. Exact match.
     * @param {string} [tdei_service_id] &lt;strong&gt;TDEI service ID:&lt;/strong&gt; Filters datasets that belong to the specified TDEI service. Exact match.
     * @param {string} [valid_from] &lt;strong&gt;Valid from:&lt;/strong&gt; Filters datasets with a valid-from date later than the specified date-time.
     * @param {string} [valid_to] &lt;strong&gt;Valid to:&lt;/strong&gt; Filters datasets with a valid-to date earlier than the specified date-time.
     * @param {string} [tdei_dataset_id] &lt;strong&gt;TDEI dataset ID:&lt;/strong&gt; Filters datasets by the specified TDEI dataset ID.
     * @param {Array<number>} [bbox] &lt;strong&gt;Bounding box:&lt;/strong&gt; Specifies the geographic area to search within, using a bounding box defined by four coordinates in the order: west, south, east, north. Accepts an array of four numeric values.
     * @param {string} [other_published_locations] &lt;strong&gt;Other published locations:&lt;/strong&gt; Lists additional places where the dataset has been published. Supports contains match.
     * @param {number} [dataset_update_frequency_months] &lt;strong&gt;Dataset update frequency in months:&lt;/strong&gt; Filters datasets based on how frequently they are updated. Uses a greater than or equal to match to include datasets updated at this frequency or more often.
     * @param {string} [schema_validation_run_description] &lt;strong&gt;Schema validation run description:&lt;/strong&gt; Filters datasets based on the description of the schema validation run. Accepts a string value and uses contains match.
     * @param {string} [full_dataset_name] &lt;strong&gt;Full dataset name:&lt;/strong&gt; Filters datasets based on their full name. Supports contains match.
     * @param {string} [collection_name] &lt;strong&gt;Collection name:&lt;/strong&gt; Filters datasets based on their collection name. Supports contains match.
     * @param {string} [department_name] &lt;strong&gt;Department name:&lt;/strong&gt; Filters datasets based on their department name. Supports contains match.
     * @param {string} [city] &lt;strong&gt;Name of City:&lt;/strong&gt; Filters datasets based on the city name. Supports contains match.
     * @param {string} [region] &lt;strong&gt;Region:&lt;/strong&gt; Filters datasets based on the region name. Supports contains match.
     * @param {string} [county] &lt;strong&gt;County:&lt;/strong&gt; Filters datasets based on the county name. Supports contains match.
     * @param {string} [key_limitations] &lt;strong&gt;Key limitations:&lt;/strong&gt; Filters datasets based on their key limitations. Supports contains match.
     * @param {string} [release_notes] &lt;strong&gt;Release notes:&lt;/strong&gt; Filters datasets based on their release notes. Supports contains match.
     * @param {string} [challenges] &lt;strong&gt;Challenges:&lt;/strong&gt; Filters datasets based on the challenges faced in collecting the data. Supports contains match.
     * @param {Array<string>} [official_maintainer] &lt;strong&gt;Official maintainer:&lt;/strong&gt; Filters datasets based on the official maintainer. Supports contains match.
     * @param {string} [last_updated] &lt;strong&gt;Last updated:&lt;/strong&gt; Filters datasets based on the last updated date. Accepts a date-time string match.
     * @param {string} [update_frequency] &lt;strong&gt;Update frequency:&lt;/strong&gt; Filters datasets based on their update frequency. Supports contains match.
     * @param {string} [authorization_chain] &lt;strong&gt;Authorization chain:&lt;/strong&gt; Filters datasets based on their authorization chain. Supports contains match.
     * @param {boolean} [maintenance_funded] &lt;strong&gt;Maintenance funded:&lt;/strong&gt; Filters datasets based on whether they are funded for maintenance. Uses a boolean value.
     * @param {string} [funding_details] &lt;strong&gt;Funding details:&lt;/strong&gt; Filters datasets based on their funding details. Supports contains match.
     * @param {string} [point_data_collection_device] &lt;strong&gt;Point data collection device:&lt;/strong&gt; Filters datasets based on the device used for point data collection. Supports contains match.
     * @param {string} [node_locations_and_attributes_editing_software] &lt;strong&gt;Node locations and attributes editing software:&lt;/strong&gt; Filters datasets based on the software used for editing node locations and attributes. Supports contains match.
     * @param {boolean} [data_collected_by_people] &lt;strong&gt;Data collected by people:&lt;/strong&gt; Filters datasets based on whether the data was collected by people. Uses a boolean value.
     * @param {string} [data_collectors] &lt;strong&gt;Data collectors:&lt;/strong&gt; Filters datasets based on the individuals or organizations that collected the data. Supports contains match.
     * @param {boolean} [data_captured_automatically] &lt;strong&gt;Data captured automatically:&lt;/strong&gt; Filters datasets based on whether the data was captured automatically. Uses a boolean value.
     * @param {string} [automated_collection] &lt;strong&gt;Automated collection:&lt;/strong&gt; Filters datasets based on whether the data was collected automatically. Supports contains match.
     * @param {string} [data_collectors_organization] &lt;strong&gt;Data collectors organization:&lt;/strong&gt; Filters datasets based on the organization of the data collectors. Supports contains match.
     * @param {string} [data_collector_compensation] &lt;strong&gt;Data collector compensation:&lt;/strong&gt; Filters datasets based on whether the data collectors were compensated. Supports contains match.
     * @param {string} [preprocessing_location] &lt;strong&gt;Preprocessing location:&lt;/strong&gt; Filters datasets based on their preprocessing location. Supports contains match.
     * @param {string} [preprocessing_by] &lt;strong&gt;Preprocessing by:&lt;/strong&gt; Filters datasets based on who performed the preprocessing. Supports contains match.
     * @param {string} [preprocessing_steps] &lt;strong&gt;Preprocessing steps:&lt;/strong&gt; Filters datasets based on their preprocessing steps. Supports contains match.
     * @param {boolean} [data_collection_preprocessing_documentation] &lt;strong&gt;Data collection preprocessing documentation:&lt;/strong&gt; Filters datasets based on the availability of data collection preprocessing documentation. Uses a boolean value.
     * @param {string} [documentation_uri] &lt;strong&gt;Documentation URI:&lt;/strong&gt; Filters datasets based on their documentation URI. Supports contains match.
     * @param {boolean} [validation_process_exists] &lt;strong&gt;Validation process exists:&lt;/strong&gt; Filters datasets based on whether a validation process exists. Uses a boolean value.
     * @param {string} [validation_process_description] &lt;strong&gt;Validation process description:&lt;/strong&gt; Filters datasets based on the description of the validation process. Supports contains match.
     * @param {string} [validation_conducted_by] &lt;strong&gt;Validation conducted by:&lt;/strong&gt; Filters datasets based on who conducted the validation. Supports contains match.
     * @param {string} [excluded_data] &lt;strong&gt;Excluded data:&lt;/strong&gt; Filters datasets based on whether they contain excluded data. Supports contains match.
     * @param {string} [excluded_data_reason] &lt;strong&gt;Excluded data reason:&lt;/strong&gt; Filters datasets based on the reason for excluding data. Supports contains match.
     * @param {number} [page_no] &lt;strong&gt;page_no:&lt;/strong&gt; Integer, defaults to 1. Filters datasets by retrieving results in pages.
     * @param {number} [page_size] &lt;strong&gt;Page size:&lt;/strong&gt; Integer, between 1 to 50, defaults to 10.Specifies total records per page.
     * @param {string} [sort_field] &lt;strong&gt;Sort field:&lt;/strong&gt; The field by which to sort the results. By default, it is by uploaded timestamp. Matches the exact value from the supported enumeration.
     * @param {string} [sort_order] &lt;strong&gt;Sort order:&lt;/strong&gt; By default, it is in descending order.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetFiles: (data_type?: string, status?: string, name?: string, version?: string, data_source?: string, collection_method?: string, collected_by?: string, derived_from_dataset_id?: string, collection_date?: string, confidence_level?: number, schema_version?: string, tdei_project_group_id?: string, tdei_service_id?: string, valid_from?: string, valid_to?: string, tdei_dataset_id?: string, bbox?: Array<number>, other_published_locations?: string, dataset_update_frequency_months?: number, schema_validation_run_description?: string, full_dataset_name?: string, collection_name?: string, department_name?: string, city?: string, region?: string, county?: string, key_limitations?: string, release_notes?: string, challenges?: string, official_maintainer?: Array<string>, last_updated?: string, update_frequency?: string, authorization_chain?: string, maintenance_funded?: boolean, funding_details?: string, point_data_collection_device?: string, node_locations_and_attributes_editing_software?: string, data_collected_by_people?: boolean, data_collectors?: string, data_captured_automatically?: boolean, automated_collection?: string, data_collectors_organization?: string, data_collector_compensation?: string, preprocessing_location?: string, preprocessing_by?: string, preprocessing_steps?: string, data_collection_preprocessing_documentation?: boolean, documentation_uri?: string, validation_process_exists?: boolean, validation_process_description?: string, validation_conducted_by?: string, excluded_data?: string, excluded_data_reason?: string, page_no?: number, page_size?: number, sort_field?: string, sort_order?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of jobs including request and reponse details. By default only shows the jobs that are submitted by the user.
     * @summary Shows the details of the jobs that the user has access to.
     * @param {string} tdei_project_group_id project group id of the user for which the jobs are listed for.
     * @param {string} [job_id] Get the details for the job with id&#x3D;job_id only.
     * @param {boolean} [show_group_jobs] Make this &#x60;true&#x60; to see the jobs submitted by others also in the given project group
     * @param {string} [job_type] Use this to filter for a specific type of job
     * @param {string} [status] Status of the job. Use this to filter jobs by a specific status
     * @param {number} [page_no] Pagination: page number to start the list from. Defaults to 1.
     * @param {number} [page_size] Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listJobs: (tdei_project_group_id: string, job_id?: string, show_group_jobs?: boolean, job_type?: string, status?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieves the list of project groups in the TDEI system. By default lists all the prohect groups in the TDEI system.
     * @summary List project groups
     * @param {string} [tdei_project_group_id] Get the details of the project group with id&#x3D;tdei_project_group_id only.
     * @param {string} [searchText] Search by project group name.
     * @param {number} [page_no] Pagination: page number to start the list from.
     * @param {number} [page_size] Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listProjectGroups: (tdei_project_group_id?: string, searchText?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieves the list of services in the TDEI system. By default lists all the services in the TDEI system
     * @summary Lists the TDEI services
     * @param {string} [tdei_service_id] Get the details for the service with id&#x3D;job_id only.
     * @param {string} [searchText] Search by service name.
     * @param {string} [tdei_project_group_id] Gets the services belonging to a specific project group.&#x60;tdei_project_group_id&#x60; can be retrieved using the api &#x60;api/v1/project-groups&#x60;
     * @param {string} [service_type] Type of the service. Default list displays services with all types
     * @param {number} [page_no] Pagination: page number to start the list from.
     * @param {number} [page_size] Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listServices: (tdei_service_id?: string, searchText?: string, tdei_project_group_id?: string, service_type?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CommonAPIsApi - functional programming interface
 * @export
 */
export declare const CommonAPIsApiFp: (configuration?: Configuration) => {
    /**
     * Cloning of a dataset lets one to use the dataset being cloned as the base for a new dataset without having to upload the dataset. This operation clones the datafiles in the dataset `tdei_dataset_id` to the designated project group `tdei_project_group_id` and service `tdei_service_id`, and uses the metadata file provided along with the API as the metadata. Returns cloned dataset id if the action is successful.
     * @summary Clones the provided dataset to the designated project group and service.
     * @param {Blob} file
     * @param {string} tdei_dataset_id Valid TDEI dataset id to be cloned.
     * @param {string} tdei_project_group_id Valid TDEI project group id.
     * @param {string} tdei_service_id Valid TDEI service id associated with the project group.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cloneDatasetForm(file: Blob, tdei_dataset_id: string, tdei_project_group_id: string, tdei_service_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<string>>>;
    /**
     * Deletes the dataset from TDEI system. This operation cannot be undone.
     * @summary Deletes the Dataset
     * @param {string} tdei_dataset_id Valid TDEI Dataset ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteDataset(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<boolean>>>;
    /**
     * Updates the metadata of a dataset with the metadata in the provided file. Returns status 200 if the action is successful.
     * @summary Updates the metadata of a given dataset
     * @param {Blob} file
     * @param {string} tdei_dataset_id Must be a valid TDEI dataset id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    editMetadataForm(file: Blob, tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     * Downloads the output file generated by the job
     * @summary Downloads the job output file
     * @param {string} job_id job_id uniquely represents the job request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    jobDownload(job_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     * Returns a list of supported versions of the TDEI API.
     * @summary List TDEI supported API versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listApiVersions(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<APIVersionList>>>;
    /**
     * <p>This API returns filtered and sorted lists of TDEI datasets. The matching behavior of filter parameters may vary depending on the attribute type.</p> <p>By default results will include all datasets in released status AND all dataset in pre-release status within the requesting user's project group. This behavior can be controlled by the status parameter.  In no situation can a user see pre-release datasets from a project group the user is not part of.</p>    <b>Primary use cases include</b>: <ul> <li><b>name search</b>: Given a search string X, return all datasets with a name that contains the search string X </li> <li><b>dataset id lookup</b>: Given a tdei_dataset_id, return the dataset with the matching id </li> <li> <b>bounding box</b>: Given xmin, xmax, ymin, ymax, return datasets with dataset_area overlapping the bounding box </li> </ul>    <b>Sorting</b>:<br> <p>Users can sort datasets by 'valid_to', 'valid_from', 'uploaded date', 'project group name', and 'status'.</p>
     * @summary Lists the TDEI datasets in the system.
     * @param {string} [data_type] &lt;strong&gt;Type of the dataset&lt;/strong&gt;. Filters datasets by matching the exact value from the supported enumeration.
     * @param {string} [status] &lt;p&gt;&lt;strong&gt;Status of the dataset:&lt;/strong&gt; Filters datasets by status â€” &lt;code&gt;All&lt;/code&gt; (default) returns released datasets and pre-release datasets from the user&#x27;s project groups; &lt;code&gt;Pre-Release&lt;/code&gt; and &lt;code&gt;Publish&lt;/code&gt; return only datasets in that status from affiliated project groups.&lt;/p&gt;
     * @param {string} [name] &lt;p&gt;&lt;strong&gt;Dataset name or title:&lt;/strong&gt; Filters datasets where the name or title contains the specified search text.&lt;/p&gt;
     * @param {string} [version] &lt;p&gt;&lt;strong&gt;Dataset version:&lt;/strong&gt; Filters datasets using an exact match on the version value.&lt;/p&gt;
     * @param {string} [data_source] &lt;p&gt;&lt;strong&gt;Data source:&lt;/strong&gt; Filters datasets by matching the exact value from the supported enumeration.&lt;/p&gt;
     * @param {string} [collection_method] &lt;p&gt;&lt;strong&gt;Collection method:&lt;/strong&gt; Filters datasets by matching the exact value from the supported enumeration.&lt;/p&gt;
     * @param {string} [collected_by] &lt;p&gt;&lt;strong&gt;Collected by:&lt;/strong&gt; Filters datasets using an exact match on the collection agency or person&#x27;s name.&lt;/p&gt;
     * @param {string} [derived_from_dataset_id] &lt;strong&gt;derived_from_dataset_id:&lt;/strong&gt; Filters datasets that are derived from the specified dataset ID. Exact match.
     * @param {string} [collection_date] &lt;strong&gt;collection_date:&lt;/strong&gt; Filters datasets collected after the specified date and time.
     * @param {number} [confidence_level] &lt;strong&gt;Confidence level:&lt;/strong&gt; Minimum confidence level required. Returns datasets with confidence level greater than the specified value. Range: 0 (very low) to 100 (very high).
     * @param {string} [schema_version] &lt;strong&gt;Schema version:&lt;/strong&gt; Filters datasets that match the requested data type schema version. The list of supported versions can be found at &lt;code&gt;/api/v1/{data_type}/versions&lt;/code&gt;.
     * @param {string} [tdei_project_group_id] &lt;strong&gt;TDEI project group ID:&lt;/strong&gt; Filters datasets that belong to the specified project group. Exact match.
     * @param {string} [tdei_service_id] &lt;strong&gt;TDEI service ID:&lt;/strong&gt; Filters datasets that belong to the specified TDEI service. Exact match.
     * @param {string} [valid_from] &lt;strong&gt;Valid from:&lt;/strong&gt; Filters datasets with a valid-from date later than the specified date-time.
     * @param {string} [valid_to] &lt;strong&gt;Valid to:&lt;/strong&gt; Filters datasets with a valid-to date earlier than the specified date-time.
     * @param {string} [tdei_dataset_id] &lt;strong&gt;TDEI dataset ID:&lt;/strong&gt; Filters datasets by the specified TDEI dataset ID.
     * @param {Array<number>} [bbox] &lt;strong&gt;Bounding box:&lt;/strong&gt; Specifies the geographic area to search within, using a bounding box defined by four coordinates in the order: west, south, east, north. Accepts an array of four numeric values.
     * @param {string} [other_published_locations] &lt;strong&gt;Other published locations:&lt;/strong&gt; Lists additional places where the dataset has been published. Supports contains match.
     * @param {number} [dataset_update_frequency_months] &lt;strong&gt;Dataset update frequency in months:&lt;/strong&gt; Filters datasets based on how frequently they are updated. Uses a greater than or equal to match to include datasets updated at this frequency or more often.
     * @param {string} [schema_validation_run_description] &lt;strong&gt;Schema validation run description:&lt;/strong&gt; Filters datasets based on the description of the schema validation run. Accepts a string value and uses contains match.
     * @param {string} [full_dataset_name] &lt;strong&gt;Full dataset name:&lt;/strong&gt; Filters datasets based on their full name. Supports contains match.
     * @param {string} [collection_name] &lt;strong&gt;Collection name:&lt;/strong&gt; Filters datasets based on their collection name. Supports contains match.
     * @param {string} [department_name] &lt;strong&gt;Department name:&lt;/strong&gt; Filters datasets based on their department name. Supports contains match.
     * @param {string} [city] &lt;strong&gt;Name of City:&lt;/strong&gt; Filters datasets based on the city name. Supports contains match.
     * @param {string} [region] &lt;strong&gt;Region:&lt;/strong&gt; Filters datasets based on the region name. Supports contains match.
     * @param {string} [county] &lt;strong&gt;County:&lt;/strong&gt; Filters datasets based on the county name. Supports contains match.
     * @param {string} [key_limitations] &lt;strong&gt;Key limitations:&lt;/strong&gt; Filters datasets based on their key limitations. Supports contains match.
     * @param {string} [release_notes] &lt;strong&gt;Release notes:&lt;/strong&gt; Filters datasets based on their release notes. Supports contains match.
     * @param {string} [challenges] &lt;strong&gt;Challenges:&lt;/strong&gt; Filters datasets based on the challenges faced in collecting the data. Supports contains match.
     * @param {Array<string>} [official_maintainer] &lt;strong&gt;Official maintainer:&lt;/strong&gt; Filters datasets based on the official maintainer. Supports contains match.
     * @param {string} [last_updated] &lt;strong&gt;Last updated:&lt;/strong&gt; Filters datasets based on the last updated date. Accepts a date-time string match.
     * @param {string} [update_frequency] &lt;strong&gt;Update frequency:&lt;/strong&gt; Filters datasets based on their update frequency. Supports contains match.
     * @param {string} [authorization_chain] &lt;strong&gt;Authorization chain:&lt;/strong&gt; Filters datasets based on their authorization chain. Supports contains match.
     * @param {boolean} [maintenance_funded] &lt;strong&gt;Maintenance funded:&lt;/strong&gt; Filters datasets based on whether they are funded for maintenance. Uses a boolean value.
     * @param {string} [funding_details] &lt;strong&gt;Funding details:&lt;/strong&gt; Filters datasets based on their funding details. Supports contains match.
     * @param {string} [point_data_collection_device] &lt;strong&gt;Point data collection device:&lt;/strong&gt; Filters datasets based on the device used for point data collection. Supports contains match.
     * @param {string} [node_locations_and_attributes_editing_software] &lt;strong&gt;Node locations and attributes editing software:&lt;/strong&gt; Filters datasets based on the software used for editing node locations and attributes. Supports contains match.
     * @param {boolean} [data_collected_by_people] &lt;strong&gt;Data collected by people:&lt;/strong&gt; Filters datasets based on whether the data was collected by people. Uses a boolean value.
     * @param {string} [data_collectors] &lt;strong&gt;Data collectors:&lt;/strong&gt; Filters datasets based on the individuals or organizations that collected the data. Supports contains match.
     * @param {boolean} [data_captured_automatically] &lt;strong&gt;Data captured automatically:&lt;/strong&gt; Filters datasets based on whether the data was captured automatically. Uses a boolean value.
     * @param {string} [automated_collection] &lt;strong&gt;Automated collection:&lt;/strong&gt; Filters datasets based on whether the data was collected automatically. Supports contains match.
     * @param {string} [data_collectors_organization] &lt;strong&gt;Data collectors organization:&lt;/strong&gt; Filters datasets based on the organization of the data collectors. Supports contains match.
     * @param {string} [data_collector_compensation] &lt;strong&gt;Data collector compensation:&lt;/strong&gt; Filters datasets based on whether the data collectors were compensated. Supports contains match.
     * @param {string} [preprocessing_location] &lt;strong&gt;Preprocessing location:&lt;/strong&gt; Filters datasets based on their preprocessing location. Supports contains match.
     * @param {string} [preprocessing_by] &lt;strong&gt;Preprocessing by:&lt;/strong&gt; Filters datasets based on who performed the preprocessing. Supports contains match.
     * @param {string} [preprocessing_steps] &lt;strong&gt;Preprocessing steps:&lt;/strong&gt; Filters datasets based on their preprocessing steps. Supports contains match.
     * @param {boolean} [data_collection_preprocessing_documentation] &lt;strong&gt;Data collection preprocessing documentation:&lt;/strong&gt; Filters datasets based on the availability of data collection preprocessing documentation. Uses a boolean value.
     * @param {string} [documentation_uri] &lt;strong&gt;Documentation URI:&lt;/strong&gt; Filters datasets based on their documentation URI. Supports contains match.
     * @param {boolean} [validation_process_exists] &lt;strong&gt;Validation process exists:&lt;/strong&gt; Filters datasets based on whether a validation process exists. Uses a boolean value.
     * @param {string} [validation_process_description] &lt;strong&gt;Validation process description:&lt;/strong&gt; Filters datasets based on the description of the validation process. Supports contains match.
     * @param {string} [validation_conducted_by] &lt;strong&gt;Validation conducted by:&lt;/strong&gt; Filters datasets based on who conducted the validation. Supports contains match.
     * @param {string} [excluded_data] &lt;strong&gt;Excluded data:&lt;/strong&gt; Filters datasets based on whether they contain excluded data. Supports contains match.
     * @param {string} [excluded_data_reason] &lt;strong&gt;Excluded data reason:&lt;/strong&gt; Filters datasets based on the reason for excluding data. Supports contains match.
     * @param {number} [page_no] &lt;strong&gt;page_no:&lt;/strong&gt; Integer, defaults to 1. Filters datasets by retrieving results in pages.
     * @param {number} [page_size] &lt;strong&gt;Page size:&lt;/strong&gt; Integer, between 1 to 50, defaults to 10.Specifies total records per page.
     * @param {string} [sort_field] &lt;strong&gt;Sort field:&lt;/strong&gt; The field by which to sort the results. By default, it is by uploaded timestamp. Matches the exact value from the supported enumeration.
     * @param {string} [sort_order] &lt;strong&gt;Sort order:&lt;/strong&gt; By default, it is in descending order.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetFiles(data_type?: string, status?: string, name?: string, version?: string, data_source?: string, collection_method?: string, collected_by?: string, derived_from_dataset_id?: string, collection_date?: string, confidence_level?: number, schema_version?: string, tdei_project_group_id?: string, tdei_service_id?: string, valid_from?: string, valid_to?: string, tdei_dataset_id?: string, bbox?: Array<number>, other_published_locations?: string, dataset_update_frequency_months?: number, schema_validation_run_description?: string, full_dataset_name?: string, collection_name?: string, department_name?: string, city?: string, region?: string, county?: string, key_limitations?: string, release_notes?: string, challenges?: string, official_maintainer?: Array<string>, last_updated?: string, update_frequency?: string, authorization_chain?: string, maintenance_funded?: boolean, funding_details?: string, point_data_collection_device?: string, node_locations_and_attributes_editing_software?: string, data_collected_by_people?: boolean, data_collectors?: string, data_captured_automatically?: boolean, automated_collection?: string, data_collectors_organization?: string, data_collector_compensation?: string, preprocessing_location?: string, preprocessing_by?: string, preprocessing_steps?: string, data_collection_preprocessing_documentation?: boolean, documentation_uri?: string, validation_process_exists?: boolean, validation_process_description?: string, validation_conducted_by?: string, excluded_data?: string, excluded_data_reason?: string, page_no?: number, page_size?: number, sort_field?: string, sort_order?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<DatasetItem>>>>;
    /**
     * Returns a list of jobs including request and reponse details. By default only shows the jobs that are submitted by the user.
     * @summary Shows the details of the jobs that the user has access to.
     * @param {string} tdei_project_group_id project group id of the user for which the jobs are listed for.
     * @param {string} [job_id] Get the details for the job with id&#x3D;job_id only.
     * @param {boolean} [show_group_jobs] Make this &#x60;true&#x60; to see the jobs submitted by others also in the given project group
     * @param {string} [job_type] Use this to filter for a specific type of job
     * @param {string} [status] Status of the job. Use this to filter jobs by a specific status
     * @param {number} [page_no] Pagination: page number to start the list from. Defaults to 1.
     * @param {number} [page_size] Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listJobs(tdei_project_group_id: string, job_id?: string, show_group_jobs?: boolean, job_type?: string, status?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<JobDetails>>>>;
    /**
     * Retrieves the list of project groups in the TDEI system. By default lists all the prohect groups in the TDEI system.
     * @summary List project groups
     * @param {string} [tdei_project_group_id] Get the details of the project group with id&#x3D;tdei_project_group_id only.
     * @param {string} [searchText] Search by project group name.
     * @param {number} [page_no] Pagination: page number to start the list from.
     * @param {number} [page_size] Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listProjectGroups(tdei_project_group_id?: string, searchText?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<ProjectGroup>>>>;
    /**
     * Retrieves the list of services in the TDEI system. By default lists all the services in the TDEI system
     * @summary Lists the TDEI services
     * @param {string} [tdei_service_id] Get the details for the service with id&#x3D;job_id only.
     * @param {string} [searchText] Search by service name.
     * @param {string} [tdei_project_group_id] Gets the services belonging to a specific project group.&#x60;tdei_project_group_id&#x60; can be retrieved using the api &#x60;api/v1/project-groups&#x60;
     * @param {string} [service_type] Type of the service. Default list displays services with all types
     * @param {number} [page_no] Pagination: page number to start the list from.
     * @param {number} [page_size] Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listServices(tdei_service_id?: string, searchText?: string, tdei_project_group_id?: string, service_type?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<ServiceModel>>>>;
};
/**
 * CommonAPIsApi - factory interface
 * @export
 */
export declare const CommonAPIsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Cloning of a dataset lets one to use the dataset being cloned as the base for a new dataset without having to upload the dataset. This operation clones the datafiles in the dataset `tdei_dataset_id` to the designated project group `tdei_project_group_id` and service `tdei_service_id`, and uses the metadata file provided along with the API as the metadata. Returns cloned dataset id if the action is successful.
     * @summary Clones the provided dataset to the designated project group and service.
     * @param {Blob} file
     * @param {string} tdei_dataset_id Valid TDEI dataset id to be cloned.
     * @param {string} tdei_project_group_id Valid TDEI project group id.
     * @param {string} tdei_service_id Valid TDEI service id associated with the project group.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cloneDatasetForm(file: Blob, tdei_dataset_id: string, tdei_project_group_id: string, tdei_service_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * Deletes the dataset from TDEI system. This operation cannot be undone.
     * @summary Deletes the Dataset
     * @param {string} tdei_dataset_id Valid TDEI Dataset ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteDataset(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<boolean>>;
    /**
     * Updates the metadata of a dataset with the metadata in the provided file. Returns status 200 if the action is successful.
     * @summary Updates the metadata of a given dataset
     * @param {Blob} file
     * @param {string} tdei_dataset_id Must be a valid TDEI dataset id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    editMetadataForm(file: Blob, tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Downloads the output file generated by the job
     * @summary Downloads the job output file
     * @param {string} job_id job_id uniquely represents the job request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    jobDownload(job_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Returns a list of supported versions of the TDEI API.
     * @summary List TDEI supported API versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listApiVersions(options?: AxiosRequestConfig): Promise<AxiosResponse<APIVersionList>>;
    /**
     * <p>This API returns filtered and sorted lists of TDEI datasets. The matching behavior of filter parameters may vary depending on the attribute type.</p> <p>By default results will include all datasets in released status AND all dataset in pre-release status within the requesting user's project group. This behavior can be controlled by the status parameter.  In no situation can a user see pre-release datasets from a project group the user is not part of.</p>    <b>Primary use cases include</b>: <ul> <li><b>name search</b>: Given a search string X, return all datasets with a name that contains the search string X </li> <li><b>dataset id lookup</b>: Given a tdei_dataset_id, return the dataset with the matching id </li> <li> <b>bounding box</b>: Given xmin, xmax, ymin, ymax, return datasets with dataset_area overlapping the bounding box </li> </ul>    <b>Sorting</b>:<br> <p>Users can sort datasets by 'valid_to', 'valid_from', 'uploaded date', 'project group name', and 'status'.</p>
     * @summary Lists the TDEI datasets in the system.
     * @param {string} [data_type] &lt;strong&gt;Type of the dataset&lt;/strong&gt;. Filters datasets by matching the exact value from the supported enumeration.
     * @param {string} [status] &lt;p&gt;&lt;strong&gt;Status of the dataset:&lt;/strong&gt; Filters datasets by status â€” &lt;code&gt;All&lt;/code&gt; (default) returns released datasets and pre-release datasets from the user&#x27;s project groups; &lt;code&gt;Pre-Release&lt;/code&gt; and &lt;code&gt;Publish&lt;/code&gt; return only datasets in that status from affiliated project groups.&lt;/p&gt;
     * @param {string} [name] &lt;p&gt;&lt;strong&gt;Dataset name or title:&lt;/strong&gt; Filters datasets where the name or title contains the specified search text.&lt;/p&gt;
     * @param {string} [version] &lt;p&gt;&lt;strong&gt;Dataset version:&lt;/strong&gt; Filters datasets using an exact match on the version value.&lt;/p&gt;
     * @param {string} [data_source] &lt;p&gt;&lt;strong&gt;Data source:&lt;/strong&gt; Filters datasets by matching the exact value from the supported enumeration.&lt;/p&gt;
     * @param {string} [collection_method] &lt;p&gt;&lt;strong&gt;Collection method:&lt;/strong&gt; Filters datasets by matching the exact value from the supported enumeration.&lt;/p&gt;
     * @param {string} [collected_by] &lt;p&gt;&lt;strong&gt;Collected by:&lt;/strong&gt; Filters datasets using an exact match on the collection agency or person&#x27;s name.&lt;/p&gt;
     * @param {string} [derived_from_dataset_id] &lt;strong&gt;derived_from_dataset_id:&lt;/strong&gt; Filters datasets that are derived from the specified dataset ID. Exact match.
     * @param {string} [collection_date] &lt;strong&gt;collection_date:&lt;/strong&gt; Filters datasets collected after the specified date and time.
     * @param {number} [confidence_level] &lt;strong&gt;Confidence level:&lt;/strong&gt; Minimum confidence level required. Returns datasets with confidence level greater than the specified value. Range: 0 (very low) to 100 (very high).
     * @param {string} [schema_version] &lt;strong&gt;Schema version:&lt;/strong&gt; Filters datasets that match the requested data type schema version. The list of supported versions can be found at &lt;code&gt;/api/v1/{data_type}/versions&lt;/code&gt;.
     * @param {string} [tdei_project_group_id] &lt;strong&gt;TDEI project group ID:&lt;/strong&gt; Filters datasets that belong to the specified project group. Exact match.
     * @param {string} [tdei_service_id] &lt;strong&gt;TDEI service ID:&lt;/strong&gt; Filters datasets that belong to the specified TDEI service. Exact match.
     * @param {string} [valid_from] &lt;strong&gt;Valid from:&lt;/strong&gt; Filters datasets with a valid-from date later than the specified date-time.
     * @param {string} [valid_to] &lt;strong&gt;Valid to:&lt;/strong&gt; Filters datasets with a valid-to date earlier than the specified date-time.
     * @param {string} [tdei_dataset_id] &lt;strong&gt;TDEI dataset ID:&lt;/strong&gt; Filters datasets by the specified TDEI dataset ID.
     * @param {Array<number>} [bbox] &lt;strong&gt;Bounding box:&lt;/strong&gt; Specifies the geographic area to search within, using a bounding box defined by four coordinates in the order: west, south, east, north. Accepts an array of four numeric values.
     * @param {string} [other_published_locations] &lt;strong&gt;Other published locations:&lt;/strong&gt; Lists additional places where the dataset has been published. Supports contains match.
     * @param {number} [dataset_update_frequency_months] &lt;strong&gt;Dataset update frequency in months:&lt;/strong&gt; Filters datasets based on how frequently they are updated. Uses a greater than or equal to match to include datasets updated at this frequency or more often.
     * @param {string} [schema_validation_run_description] &lt;strong&gt;Schema validation run description:&lt;/strong&gt; Filters datasets based on the description of the schema validation run. Accepts a string value and uses contains match.
     * @param {string} [full_dataset_name] &lt;strong&gt;Full dataset name:&lt;/strong&gt; Filters datasets based on their full name. Supports contains match.
     * @param {string} [collection_name] &lt;strong&gt;Collection name:&lt;/strong&gt; Filters datasets based on their collection name. Supports contains match.
     * @param {string} [department_name] &lt;strong&gt;Department name:&lt;/strong&gt; Filters datasets based on their department name. Supports contains match.
     * @param {string} [city] &lt;strong&gt;Name of City:&lt;/strong&gt; Filters datasets based on the city name. Supports contains match.
     * @param {string} [region] &lt;strong&gt;Region:&lt;/strong&gt; Filters datasets based on the region name. Supports contains match.
     * @param {string} [county] &lt;strong&gt;County:&lt;/strong&gt; Filters datasets based on the county name. Supports contains match.
     * @param {string} [key_limitations] &lt;strong&gt;Key limitations:&lt;/strong&gt; Filters datasets based on their key limitations. Supports contains match.
     * @param {string} [release_notes] &lt;strong&gt;Release notes:&lt;/strong&gt; Filters datasets based on their release notes. Supports contains match.
     * @param {string} [challenges] &lt;strong&gt;Challenges:&lt;/strong&gt; Filters datasets based on the challenges faced in collecting the data. Supports contains match.
     * @param {Array<string>} [official_maintainer] &lt;strong&gt;Official maintainer:&lt;/strong&gt; Filters datasets based on the official maintainer. Supports contains match.
     * @param {string} [last_updated] &lt;strong&gt;Last updated:&lt;/strong&gt; Filters datasets based on the last updated date. Accepts a date-time string match.
     * @param {string} [update_frequency] &lt;strong&gt;Update frequency:&lt;/strong&gt; Filters datasets based on their update frequency. Supports contains match.
     * @param {string} [authorization_chain] &lt;strong&gt;Authorization chain:&lt;/strong&gt; Filters datasets based on their authorization chain. Supports contains match.
     * @param {boolean} [maintenance_funded] &lt;strong&gt;Maintenance funded:&lt;/strong&gt; Filters datasets based on whether they are funded for maintenance. Uses a boolean value.
     * @param {string} [funding_details] &lt;strong&gt;Funding details:&lt;/strong&gt; Filters datasets based on their funding details. Supports contains match.
     * @param {string} [point_data_collection_device] &lt;strong&gt;Point data collection device:&lt;/strong&gt; Filters datasets based on the device used for point data collection. Supports contains match.
     * @param {string} [node_locations_and_attributes_editing_software] &lt;strong&gt;Node locations and attributes editing software:&lt;/strong&gt; Filters datasets based on the software used for editing node locations and attributes. Supports contains match.
     * @param {boolean} [data_collected_by_people] &lt;strong&gt;Data collected by people:&lt;/strong&gt; Filters datasets based on whether the data was collected by people. Uses a boolean value.
     * @param {string} [data_collectors] &lt;strong&gt;Data collectors:&lt;/strong&gt; Filters datasets based on the individuals or organizations that collected the data. Supports contains match.
     * @param {boolean} [data_captured_automatically] &lt;strong&gt;Data captured automatically:&lt;/strong&gt; Filters datasets based on whether the data was captured automatically. Uses a boolean value.
     * @param {string} [automated_collection] &lt;strong&gt;Automated collection:&lt;/strong&gt; Filters datasets based on whether the data was collected automatically. Supports contains match.
     * @param {string} [data_collectors_organization] &lt;strong&gt;Data collectors organization:&lt;/strong&gt; Filters datasets based on the organization of the data collectors. Supports contains match.
     * @param {string} [data_collector_compensation] &lt;strong&gt;Data collector compensation:&lt;/strong&gt; Filters datasets based on whether the data collectors were compensated. Supports contains match.
     * @param {string} [preprocessing_location] &lt;strong&gt;Preprocessing location:&lt;/strong&gt; Filters datasets based on their preprocessing location. Supports contains match.
     * @param {string} [preprocessing_by] &lt;strong&gt;Preprocessing by:&lt;/strong&gt; Filters datasets based on who performed the preprocessing. Supports contains match.
     * @param {string} [preprocessing_steps] &lt;strong&gt;Preprocessing steps:&lt;/strong&gt; Filters datasets based on their preprocessing steps. Supports contains match.
     * @param {boolean} [data_collection_preprocessing_documentation] &lt;strong&gt;Data collection preprocessing documentation:&lt;/strong&gt; Filters datasets based on the availability of data collection preprocessing documentation. Uses a boolean value.
     * @param {string} [documentation_uri] &lt;strong&gt;Documentation URI:&lt;/strong&gt; Filters datasets based on their documentation URI. Supports contains match.
     * @param {boolean} [validation_process_exists] &lt;strong&gt;Validation process exists:&lt;/strong&gt; Filters datasets based on whether a validation process exists. Uses a boolean value.
     * @param {string} [validation_process_description] &lt;strong&gt;Validation process description:&lt;/strong&gt; Filters datasets based on the description of the validation process. Supports contains match.
     * @param {string} [validation_conducted_by] &lt;strong&gt;Validation conducted by:&lt;/strong&gt; Filters datasets based on who conducted the validation. Supports contains match.
     * @param {string} [excluded_data] &lt;strong&gt;Excluded data:&lt;/strong&gt; Filters datasets based on whether they contain excluded data. Supports contains match.
     * @param {string} [excluded_data_reason] &lt;strong&gt;Excluded data reason:&lt;/strong&gt; Filters datasets based on the reason for excluding data. Supports contains match.
     * @param {number} [page_no] &lt;strong&gt;page_no:&lt;/strong&gt; Integer, defaults to 1. Filters datasets by retrieving results in pages.
     * @param {number} [page_size] &lt;strong&gt;Page size:&lt;/strong&gt; Integer, between 1 to 50, defaults to 10.Specifies total records per page.
     * @param {string} [sort_field] &lt;strong&gt;Sort field:&lt;/strong&gt; The field by which to sort the results. By default, it is by uploaded timestamp. Matches the exact value from the supported enumeration.
     * @param {string} [sort_order] &lt;strong&gt;Sort order:&lt;/strong&gt; By default, it is in descending order.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetFiles(data_type?: string, status?: string, name?: string, version?: string, data_source?: string, collection_method?: string, collected_by?: string, derived_from_dataset_id?: string, collection_date?: string, confidence_level?: number, schema_version?: string, tdei_project_group_id?: string, tdei_service_id?: string, valid_from?: string, valid_to?: string, tdei_dataset_id?: string, bbox?: Array<number>, other_published_locations?: string, dataset_update_frequency_months?: number, schema_validation_run_description?: string, full_dataset_name?: string, collection_name?: string, department_name?: string, city?: string, region?: string, county?: string, key_limitations?: string, release_notes?: string, challenges?: string, official_maintainer?: Array<string>, last_updated?: string, update_frequency?: string, authorization_chain?: string, maintenance_funded?: boolean, funding_details?: string, point_data_collection_device?: string, node_locations_and_attributes_editing_software?: string, data_collected_by_people?: boolean, data_collectors?: string, data_captured_automatically?: boolean, automated_collection?: string, data_collectors_organization?: string, data_collector_compensation?: string, preprocessing_location?: string, preprocessing_by?: string, preprocessing_steps?: string, data_collection_preprocessing_documentation?: boolean, documentation_uri?: string, validation_process_exists?: boolean, validation_process_description?: string, validation_conducted_by?: string, excluded_data?: string, excluded_data_reason?: string, page_no?: number, page_size?: number, sort_field?: string, sort_order?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<DatasetItem>>>;
    /**
     * Returns a list of jobs including request and reponse details. By default only shows the jobs that are submitted by the user.
     * @summary Shows the details of the jobs that the user has access to.
     * @param {string} tdei_project_group_id project group id of the user for which the jobs are listed for.
     * @param {string} [job_id] Get the details for the job with id&#x3D;job_id only.
     * @param {boolean} [show_group_jobs] Make this &#x60;true&#x60; to see the jobs submitted by others also in the given project group
     * @param {string} [job_type] Use this to filter for a specific type of job
     * @param {string} [status] Status of the job. Use this to filter jobs by a specific status
     * @param {number} [page_no] Pagination: page number to start the list from. Defaults to 1.
     * @param {number} [page_size] Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listJobs(tdei_project_group_id: string, job_id?: string, show_group_jobs?: boolean, job_type?: string, status?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<JobDetails>>>;
    /**
     * Retrieves the list of project groups in the TDEI system. By default lists all the prohect groups in the TDEI system.
     * @summary List project groups
     * @param {string} [tdei_project_group_id] Get the details of the project group with id&#x3D;tdei_project_group_id only.
     * @param {string} [searchText] Search by project group name.
     * @param {number} [page_no] Pagination: page number to start the list from.
     * @param {number} [page_size] Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listProjectGroups(tdei_project_group_id?: string, searchText?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<ProjectGroup>>>;
    /**
     * Retrieves the list of services in the TDEI system. By default lists all the services in the TDEI system
     * @summary Lists the TDEI services
     * @param {string} [tdei_service_id] Get the details for the service with id&#x3D;job_id only.
     * @param {string} [searchText] Search by service name.
     * @param {string} [tdei_project_group_id] Gets the services belonging to a specific project group.&#x60;tdei_project_group_id&#x60; can be retrieved using the api &#x60;api/v1/project-groups&#x60;
     * @param {string} [service_type] Type of the service. Default list displays services with all types
     * @param {number} [page_no] Pagination: page number to start the list from.
     * @param {number} [page_size] Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listServices(tdei_service_id?: string, searchText?: string, tdei_project_group_id?: string, service_type?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<ServiceModel>>>;
};
/**
 * CommonAPIsApi - object-oriented interface
 * @export
 * @class CommonAPIsApi
 * @extends {BaseAPI}
 */
export declare class CommonAPIsApi extends BaseAPI {
    /**
     * Cloning of a dataset lets one to use the dataset being cloned as the base for a new dataset without having to upload the dataset. This operation clones the datafiles in the dataset `tdei_dataset_id` to the designated project group `tdei_project_group_id` and service `tdei_service_id`, and uses the metadata file provided along with the API as the metadata. Returns cloned dataset id if the action is successful.
     * @summary Clones the provided dataset to the designated project group and service.
     * @param {Blob} file
     * @param {string} tdei_dataset_id Valid TDEI dataset id to be cloned.
     * @param {string} tdei_project_group_id Valid TDEI project group id.
     * @param {string} tdei_service_id Valid TDEI service id associated with the project group.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonAPIsApi
     */
    cloneDatasetForm(file: Blob, tdei_dataset_id: string, tdei_project_group_id: string, tdei_service_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * Deletes the dataset from TDEI system. This operation cannot be undone.
     * @summary Deletes the Dataset
     * @param {string} tdei_dataset_id Valid TDEI Dataset ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonAPIsApi
     */
    deleteDataset(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<boolean>>;
    /**
     * Updates the metadata of a dataset with the metadata in the provided file. Returns status 200 if the action is successful.
     * @summary Updates the metadata of a given dataset
     * @param {Blob} file
     * @param {string} tdei_dataset_id Must be a valid TDEI dataset id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonAPIsApi
     */
    editMetadataForm(file: Blob, tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Downloads the output file generated by the job
     * @summary Downloads the job output file
     * @param {string} job_id job_id uniquely represents the job request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonAPIsApi
     */
    jobDownload(job_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Returns a list of supported versions of the TDEI API.
     * @summary List TDEI supported API versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonAPIsApi
     */
    listApiVersions(options?: AxiosRequestConfig): Promise<AxiosResponse<APIVersionList>>;
    /**
     * <p>This API returns filtered and sorted lists of TDEI datasets. The matching behavior of filter parameters may vary depending on the attribute type.</p> <p>By default results will include all datasets in released status AND all dataset in pre-release status within the requesting user's project group. This behavior can be controlled by the status parameter.  In no situation can a user see pre-release datasets from a project group the user is not part of.</p>    <b>Primary use cases include</b>: <ul> <li><b>name search</b>: Given a search string X, return all datasets with a name that contains the search string X </li> <li><b>dataset id lookup</b>: Given a tdei_dataset_id, return the dataset with the matching id </li> <li> <b>bounding box</b>: Given xmin, xmax, ymin, ymax, return datasets with dataset_area overlapping the bounding box </li> </ul>    <b>Sorting</b>:<br> <p>Users can sort datasets by 'valid_to', 'valid_from', 'uploaded date', 'project group name', and 'status'.</p>
     * @summary Lists the TDEI datasets in the system.
     * @param {string} [data_type] &lt;strong&gt;Type of the dataset&lt;/strong&gt;. Filters datasets by matching the exact value from the supported enumeration.
     * @param {string} [status] &lt;p&gt;&lt;strong&gt;Status of the dataset:&lt;/strong&gt; Filters datasets by status â€” &lt;code&gt;All&lt;/code&gt; (default) returns released datasets and pre-release datasets from the user&#x27;s project groups; &lt;code&gt;Pre-Release&lt;/code&gt; and &lt;code&gt;Publish&lt;/code&gt; return only datasets in that status from affiliated project groups.&lt;/p&gt;
     * @param {string} [name] &lt;p&gt;&lt;strong&gt;Dataset name or title:&lt;/strong&gt; Filters datasets where the name or title contains the specified search text.&lt;/p&gt;
     * @param {string} [version] &lt;p&gt;&lt;strong&gt;Dataset version:&lt;/strong&gt; Filters datasets using an exact match on the version value.&lt;/p&gt;
     * @param {string} [data_source] &lt;p&gt;&lt;strong&gt;Data source:&lt;/strong&gt; Filters datasets by matching the exact value from the supported enumeration.&lt;/p&gt;
     * @param {string} [collection_method] &lt;p&gt;&lt;strong&gt;Collection method:&lt;/strong&gt; Filters datasets by matching the exact value from the supported enumeration.&lt;/p&gt;
     * @param {string} [collected_by] &lt;p&gt;&lt;strong&gt;Collected by:&lt;/strong&gt; Filters datasets using an exact match on the collection agency or person&#x27;s name.&lt;/p&gt;
     * @param {string} [derived_from_dataset_id] &lt;strong&gt;derived_from_dataset_id:&lt;/strong&gt; Filters datasets that are derived from the specified dataset ID. Exact match.
     * @param {string} [collection_date] &lt;strong&gt;collection_date:&lt;/strong&gt; Filters datasets collected after the specified date and time.
     * @param {number} [confidence_level] &lt;strong&gt;Confidence level:&lt;/strong&gt; Minimum confidence level required. Returns datasets with confidence level greater than the specified value. Range: 0 (very low) to 100 (very high).
     * @param {string} [schema_version] &lt;strong&gt;Schema version:&lt;/strong&gt; Filters datasets that match the requested data type schema version. The list of supported versions can be found at &lt;code&gt;/api/v1/{data_type}/versions&lt;/code&gt;.
     * @param {string} [tdei_project_group_id] &lt;strong&gt;TDEI project group ID:&lt;/strong&gt; Filters datasets that belong to the specified project group. Exact match.
     * @param {string} [tdei_service_id] &lt;strong&gt;TDEI service ID:&lt;/strong&gt; Filters datasets that belong to the specified TDEI service. Exact match.
     * @param {string} [valid_from] &lt;strong&gt;Valid from:&lt;/strong&gt; Filters datasets with a valid-from date later than the specified date-time.
     * @param {string} [valid_to] &lt;strong&gt;Valid to:&lt;/strong&gt; Filters datasets with a valid-to date earlier than the specified date-time.
     * @param {string} [tdei_dataset_id] &lt;strong&gt;TDEI dataset ID:&lt;/strong&gt; Filters datasets by the specified TDEI dataset ID.
     * @param {Array<number>} [bbox] &lt;strong&gt;Bounding box:&lt;/strong&gt; Specifies the geographic area to search within, using a bounding box defined by four coordinates in the order: west, south, east, north. Accepts an array of four numeric values.
     * @param {string} [other_published_locations] &lt;strong&gt;Other published locations:&lt;/strong&gt; Lists additional places where the dataset has been published. Supports contains match.
     * @param {number} [dataset_update_frequency_months] &lt;strong&gt;Dataset update frequency in months:&lt;/strong&gt; Filters datasets based on how frequently they are updated. Uses a greater than or equal to match to include datasets updated at this frequency or more often.
     * @param {string} [schema_validation_run_description] &lt;strong&gt;Schema validation run description:&lt;/strong&gt; Filters datasets based on the description of the schema validation run. Accepts a string value and uses contains match.
     * @param {string} [full_dataset_name] &lt;strong&gt;Full dataset name:&lt;/strong&gt; Filters datasets based on their full name. Supports contains match.
     * @param {string} [collection_name] &lt;strong&gt;Collection name:&lt;/strong&gt; Filters datasets based on their collection name. Supports contains match.
     * @param {string} [department_name] &lt;strong&gt;Department name:&lt;/strong&gt; Filters datasets based on their department name. Supports contains match.
     * @param {string} [city] &lt;strong&gt;Name of City:&lt;/strong&gt; Filters datasets based on the city name. Supports contains match.
     * @param {string} [region] &lt;strong&gt;Region:&lt;/strong&gt; Filters datasets based on the region name. Supports contains match.
     * @param {string} [county] &lt;strong&gt;County:&lt;/strong&gt; Filters datasets based on the county name. Supports contains match.
     * @param {string} [key_limitations] &lt;strong&gt;Key limitations:&lt;/strong&gt; Filters datasets based on their key limitations. Supports contains match.
     * @param {string} [release_notes] &lt;strong&gt;Release notes:&lt;/strong&gt; Filters datasets based on their release notes. Supports contains match.
     * @param {string} [challenges] &lt;strong&gt;Challenges:&lt;/strong&gt; Filters datasets based on the challenges faced in collecting the data. Supports contains match.
     * @param {Array<string>} [official_maintainer] &lt;strong&gt;Official maintainer:&lt;/strong&gt; Filters datasets based on the official maintainer. Supports contains match.
     * @param {string} [last_updated] &lt;strong&gt;Last updated:&lt;/strong&gt; Filters datasets based on the last updated date. Accepts a date-time string match.
     * @param {string} [update_frequency] &lt;strong&gt;Update frequency:&lt;/strong&gt; Filters datasets based on their update frequency. Supports contains match.
     * @param {string} [authorization_chain] &lt;strong&gt;Authorization chain:&lt;/strong&gt; Filters datasets based on their authorization chain. Supports contains match.
     * @param {boolean} [maintenance_funded] &lt;strong&gt;Maintenance funded:&lt;/strong&gt; Filters datasets based on whether they are funded for maintenance. Uses a boolean value.
     * @param {string} [funding_details] &lt;strong&gt;Funding details:&lt;/strong&gt; Filters datasets based on their funding details. Supports contains match.
     * @param {string} [point_data_collection_device] &lt;strong&gt;Point data collection device:&lt;/strong&gt; Filters datasets based on the device used for point data collection. Supports contains match.
     * @param {string} [node_locations_and_attributes_editing_software] &lt;strong&gt;Node locations and attributes editing software:&lt;/strong&gt; Filters datasets based on the software used for editing node locations and attributes. Supports contains match.
     * @param {boolean} [data_collected_by_people] &lt;strong&gt;Data collected by people:&lt;/strong&gt; Filters datasets based on whether the data was collected by people. Uses a boolean value.
     * @param {string} [data_collectors] &lt;strong&gt;Data collectors:&lt;/strong&gt; Filters datasets based on the individuals or organizations that collected the data. Supports contains match.
     * @param {boolean} [data_captured_automatically] &lt;strong&gt;Data captured automatically:&lt;/strong&gt; Filters datasets based on whether the data was captured automatically. Uses a boolean value.
     * @param {string} [automated_collection] &lt;strong&gt;Automated collection:&lt;/strong&gt; Filters datasets based on whether the data was collected automatically. Supports contains match.
     * @param {string} [data_collectors_organization] &lt;strong&gt;Data collectors organization:&lt;/strong&gt; Filters datasets based on the organization of the data collectors. Supports contains match.
     * @param {string} [data_collector_compensation] &lt;strong&gt;Data collector compensation:&lt;/strong&gt; Filters datasets based on whether the data collectors were compensated. Supports contains match.
     * @param {string} [preprocessing_location] &lt;strong&gt;Preprocessing location:&lt;/strong&gt; Filters datasets based on their preprocessing location. Supports contains match.
     * @param {string} [preprocessing_by] &lt;strong&gt;Preprocessing by:&lt;/strong&gt; Filters datasets based on who performed the preprocessing. Supports contains match.
     * @param {string} [preprocessing_steps] &lt;strong&gt;Preprocessing steps:&lt;/strong&gt; Filters datasets based on their preprocessing steps. Supports contains match.
     * @param {boolean} [data_collection_preprocessing_documentation] &lt;strong&gt;Data collection preprocessing documentation:&lt;/strong&gt; Filters datasets based on the availability of data collection preprocessing documentation. Uses a boolean value.
     * @param {string} [documentation_uri] &lt;strong&gt;Documentation URI:&lt;/strong&gt; Filters datasets based on their documentation URI. Supports contains match.
     * @param {boolean} [validation_process_exists] &lt;strong&gt;Validation process exists:&lt;/strong&gt; Filters datasets based on whether a validation process exists. Uses a boolean value.
     * @param {string} [validation_process_description] &lt;strong&gt;Validation process description:&lt;/strong&gt; Filters datasets based on the description of the validation process. Supports contains match.
     * @param {string} [validation_conducted_by] &lt;strong&gt;Validation conducted by:&lt;/strong&gt; Filters datasets based on who conducted the validation. Supports contains match.
     * @param {string} [excluded_data] &lt;strong&gt;Excluded data:&lt;/strong&gt; Filters datasets based on whether they contain excluded data. Supports contains match.
     * @param {string} [excluded_data_reason] &lt;strong&gt;Excluded data reason:&lt;/strong&gt; Filters datasets based on the reason for excluding data. Supports contains match.
     * @param {number} [page_no] &lt;strong&gt;page_no:&lt;/strong&gt; Integer, defaults to 1. Filters datasets by retrieving results in pages.
     * @param {number} [page_size] &lt;strong&gt;Page size:&lt;/strong&gt; Integer, between 1 to 50, defaults to 10.Specifies total records per page.
     * @param {string} [sort_field] &lt;strong&gt;Sort field:&lt;/strong&gt; The field by which to sort the results. By default, it is by uploaded timestamp. Matches the exact value from the supported enumeration.
     * @param {string} [sort_order] &lt;strong&gt;Sort order:&lt;/strong&gt; By default, it is in descending order.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonAPIsApi
     */
    listDatasetFiles(data_type?: string, status?: string, name?: string, version?: string, data_source?: string, collection_method?: string, collected_by?: string, derived_from_dataset_id?: string, collection_date?: string, confidence_level?: number, schema_version?: string, tdei_project_group_id?: string, tdei_service_id?: string, valid_from?: string, valid_to?: string, tdei_dataset_id?: string, bbox?: Array<number>, other_published_locations?: string, dataset_update_frequency_months?: number, schema_validation_run_description?: string, full_dataset_name?: string, collection_name?: string, department_name?: string, city?: string, region?: string, county?: string, key_limitations?: string, release_notes?: string, challenges?: string, official_maintainer?: Array<string>, last_updated?: string, update_frequency?: string, authorization_chain?: string, maintenance_funded?: boolean, funding_details?: string, point_data_collection_device?: string, node_locations_and_attributes_editing_software?: string, data_collected_by_people?: boolean, data_collectors?: string, data_captured_automatically?: boolean, automated_collection?: string, data_collectors_organization?: string, data_collector_compensation?: string, preprocessing_location?: string, preprocessing_by?: string, preprocessing_steps?: string, data_collection_preprocessing_documentation?: boolean, documentation_uri?: string, validation_process_exists?: boolean, validation_process_description?: string, validation_conducted_by?: string, excluded_data?: string, excluded_data_reason?: string, page_no?: number, page_size?: number, sort_field?: string, sort_order?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<DatasetItem>>>;
    /**
     * Returns a list of jobs including request and reponse details. By default only shows the jobs that are submitted by the user.
     * @summary Shows the details of the jobs that the user has access to.
     * @param {string} tdei_project_group_id project group id of the user for which the jobs are listed for.
     * @param {string} [job_id] Get the details for the job with id&#x3D;job_id only.
     * @param {boolean} [show_group_jobs] Make this &#x60;true&#x60; to see the jobs submitted by others also in the given project group
     * @param {string} [job_type] Use this to filter for a specific type of job
     * @param {string} [status] Status of the job. Use this to filter jobs by a specific status
     * @param {number} [page_no] Pagination: page number to start the list from. Defaults to 1.
     * @param {number} [page_size] Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonAPIsApi
     */
    listJobs(tdei_project_group_id: string, job_id?: string, show_group_jobs?: boolean, job_type?: string, status?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<JobDetails>>>;
    /**
     * Retrieves the list of project groups in the TDEI system. By default lists all the prohect groups in the TDEI system.
     * @summary List project groups
     * @param {string} [tdei_project_group_id] Get the details of the project group with id&#x3D;tdei_project_group_id only.
     * @param {string} [searchText] Search by project group name.
     * @param {number} [page_no] Pagination: page number to start the list from.
     * @param {number} [page_size] Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonAPIsApi
     */
    listProjectGroups(tdei_project_group_id?: string, searchText?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<ProjectGroup>>>;
    /**
     * Retrieves the list of services in the TDEI system. By default lists all the services in the TDEI system
     * @summary Lists the TDEI services
     * @param {string} [tdei_service_id] Get the details for the service with id&#x3D;job_id only.
     * @param {string} [searchText] Search by service name.
     * @param {string} [tdei_project_group_id] Gets the services belonging to a specific project group.&#x60;tdei_project_group_id&#x60; can be retrieved using the api &#x60;api/v1/project-groups&#x60;
     * @param {string} [service_type] Type of the service. Default list displays services with all types
     * @param {number} [page_no] Pagination: page number to start the list from.
     * @param {number} [page_size] Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommonAPIsApi
     */
    listServices(tdei_service_id?: string, searchText?: string, tdei_project_group_id?: string, service_type?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<ServiceModel>>>;
}
