/**
 * TDEI Gateway Dev API
 * This is an API for interacting with the Transportation Data Equity Initiative (TDEI) data system. It is intended for applications producing data to and consuming data from the TDEI system. It currently supports GTFS-Pathways, GTFS-Flex v2 and OpenSidewalks v0.2 data schemas.
 *
 * OpenAPI spec version: v0.1
 * Contact: tdei@uw.edu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { DatasetItem } from '../models';
import { JobDetails } from '../models';
import { ProjectGroup } from '../models';
import { ServiceModel } from '../models';
import { VersionList } from '../models';
/**
 * GeneralApi - axios parameter creator
 * @export
 */
export declare const GeneralApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Clone the dataset `tdei_dataset_id` to the designated project group `tdei_project_group_id` and service `tdei_service_id`. Returns cloned dataset id if the action is successful.
     * @summary Clones the provided dataset to the designated project group and service.
     * @param {Blob} file
     * @param {string} tdei_dataset_id tdei dataset id to be cloned
     * @param {string} tdei_project_group_id tdei project group id. Represented as UUID.
     * @param {string} tdei_service_id tdei service id associated with project group id. Represented as UUID.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cloneDatasetForm: (file: Blob, tdei_dataset_id: string, tdei_project_group_id: string, tdei_service_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns boolean true if the action is successful.
     * @summary Invalidates the Dataset
     * @param {string} tdei_dataset_id tdei_dataset_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteDataset: (tdei_dataset_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Edit metadata for the dataset. Returns status 200 if the action is successful.
     * @summary Edit metadata for the dataset
     * @param {Blob} file
     * @param {string} tdei_dataset_id tdei dataset id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    editMetadataForm: (file: Blob, tdei_dataset_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Downloads the dataset generated by the job
     * @summary Downloads the job download file
     * @param {string} job_id job_id uniquely represents the job request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    jobDownload: (job_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a json list of the versions of the TDEI API which are available.
     * @summary List available API versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listApiVersions: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This endpoint returns a list of url to zipped geojson files with Dataset data that meet the specified criteria. Criteria that can be specified include: a dataset area (polygon), minimum confidence level and Dataset version.
     * @summary List Dataset files meeting criteria.
     * @param {string} [data_type] Data type of the dataset.
     * @param {string} [status] Request datasets according to their status. By default, when the setting is &#x27;All&#x27;, it displays all datasets. If set to &#x27;Pre-Release&#x27; or &#x27;Publish&#x27;, it includes Pre-Release or Publish datasets for the project groups the user is a part of.
     * @param {string} [name] dataset name or title.
     * @param {string} [version] dataset version.
     * @param {string} [data_source] data source of the dataset.
     * @param {string} [collection_method] Method by which the data was collected.
     * @param {string} [collected_by] Collection agency or person.
     * @param {string} [derived_from_dataset_id] Derived from dataset id.
     * @param {string} [collection_date] Collection date time
     * @param {number} [confidence_level] Minimum confidence level required. Data returned will be at this confidence level or higher. Confidence level range is: 0 (very low confidence) to 100 (very high confidence).
     * @param {string} [schema_version] version name of the data type schema version that the application requests. list of versions can be found with /api/v1/{data_type}/versions.
     * @param {string} [tdei_project_group_id] tdei-assigned project group id. Represented as a UUID.
     * @param {string} [valid_from] Valid from date time. date-time for which the caller is interested in obtaining files.
     * @param {string} [valid_to] date-time for which the caller is interested in obtaining files. all files that are valid at the specified date-time and meet the other criteria will be returned.
     * @param {string} [tdei_dataset_id] tdei_dataset_id, unique id represents file.
     * @param {Array<number>} [bbox] A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.
     * @param {string} [other_published_locations] Other published locations
     * @param {number} [dataset_update_frequency_months] Dataset update frequency in months
     * @param {string} [schema_validation_run_description] Schema validation run description
     * @param {string} [full_dataset_name] Full dataset name
     * @param {string} [collection_name] Name of the collection
     * @param {string} [department_name] Name of the department
     * @param {string} [city] Name of the city
     * @param {string} [region] Name of the region
     * @param {string} [county] Name of the county
     * @param {string} [key_limitations_of_the_dataset] Key limitations of the dataset
     * @param {string} [challenges] Challenges faced in collecting the data
     * @param {Array<string>} [official_maintainer] Official maintainer of the dataset
     * @param {string} [last_updated] Date when the dataset was last updated
     * @param {string} [update_frequency] Frequency of updates
     * @param {string} [authorization_chain] Authorization chain
     * @param {boolean} [maintenance_funded] Is maintenance funded
     * @param {string} [funding_details] Funding details
     * @param {string} [point_data_collection_device] Point data collection device
     * @param {string} [node_locations_and_attributes_editing_software] Node locations and attributes editing software
     * @param {boolean} [data_collected_by_people] Is data collected by people
     * @param {string} [data_collectors] Data collectors
     * @param {boolean} [data_captured_automatically] Is data captured automatically
     * @param {string} [automated_collection] Automated collection
     * @param {string} [data_collectors_organization] Data collectors organization
     * @param {string} [data_collector_compensation] Data collector compensation
     * @param {string} [preprocessing_location] Preprocessing location
     * @param {string} [preprocessing_by] Preprocessing by
     * @param {string} [preprocessing_steps] Preprocessing steps
     * @param {boolean} [data_collection_preprocessing_documentation] Is data collection preprocessing documentation available
     * @param {string} [documentation_uri] Documentation URI
     * @param {boolean} [validation_process_exists] Is validation process exists
     * @param {string} [validation_process_description] Validation process description
     * @param {string} [validation_conducted_by] Validation conducted by
     * @param {string} [excluded_data] Excluded data
     * @param {string} [excluded_data_reason] Excluded data reason
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetFiles: (data_type?: string, status?: string, name?: string, version?: string, data_source?: string, collection_method?: string, collected_by?: string, derived_from_dataset_id?: string, collection_date?: string, confidence_level?: number, schema_version?: string, tdei_project_group_id?: string, valid_from?: string, valid_to?: string, tdei_dataset_id?: string, bbox?: Array<number>, other_published_locations?: string, dataset_update_frequency_months?: number, schema_validation_run_description?: string, full_dataset_name?: string, collection_name?: string, department_name?: string, city?: string, region?: string, county?: string, key_limitations_of_the_dataset?: string, challenges?: string, official_maintainer?: Array<string>, last_updated?: string, update_frequency?: string, authorization_chain?: string, maintenance_funded?: boolean, funding_details?: string, point_data_collection_device?: string, node_locations_and_attributes_editing_software?: string, data_collected_by_people?: boolean, data_collectors?: string, data_captured_automatically?: boolean, automated_collection?: string, data_collectors_organization?: string, data_collector_compensation?: string, preprocessing_location?: string, preprocessing_by?: string, preprocessing_steps?: string, data_collection_preprocessing_documentation?: boolean, documentation_uri?: string, validation_process_exists?: boolean, validation_process_description?: string, validation_conducted_by?: string, excluded_data?: string, excluded_data_reason?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This endpoint returns a list of jobs with status and request details.
     * @summary List job details.
     * @param {string} [job_id] job_id uniquely identifies the job request.
     * @param {boolean} [show_group_jobs] Show all the jobs within the project group.
     * @param {string} [job_type] job_type of the job.
     * @param {string} [status] Status of the job.
     * @param {string} [tdei_project_group_id] project group id. Represented as a UUID.
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listJobs: (job_id?: string, show_group_jobs?: boolean, job_type?: string, status?: string, tdei_project_group_id?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Path used to retrieve the list of project groups with data in the TDEI system. Allows callers to get the tdei_project_group_id id for an project group.  Returns the tdei_project_group_id and project group information for all project groups with data in the TDEI system.
     * @summary List project groups
     * @param {string} [tdei_project_group_id] Search by project group Id.
     * @param {string} [searchText] Search by project group name.
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listProjectGroups: (tdei_project_group_id?: string, searchText?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Path used to retrieve the list of Services in the TDEI system. Allows callers to get the tdei_service_id id for a service.  Returns the tdei_service_id and service name for all services in the TDEI system.   If tdei_project_group_id param is used, will return services for that project group.
     * @summary List Services
     * @param {string} [tdei_service_id] Search by service Id.
     * @param {string} [searchText] Search by service name.
     * @param {string} [tdei_project_group_id] A tdei-assigned id for an project group. project_group_ids can be retrieved using the path /api/v1/project-group.
     * @param {string} [service_type] Service type
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listServices: (tdei_service_id?: string, searchText?: string, tdei_project_group_id?: string, service_type?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * GeneralApi - functional programming interface
 * @export
 */
export declare const GeneralApiFp: (configuration?: Configuration) => {
    /**
     * Clone the dataset `tdei_dataset_id` to the designated project group `tdei_project_group_id` and service `tdei_service_id`. Returns cloned dataset id if the action is successful.
     * @summary Clones the provided dataset to the designated project group and service.
     * @param {Blob} file
     * @param {string} tdei_dataset_id tdei dataset id to be cloned
     * @param {string} tdei_project_group_id tdei project group id. Represented as UUID.
     * @param {string} tdei_service_id tdei service id associated with project group id. Represented as UUID.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cloneDatasetForm(file: Blob, tdei_dataset_id: string, tdei_project_group_id: string, tdei_service_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<string>>>;
    /**
     * Returns boolean true if the action is successful.
     * @summary Invalidates the Dataset
     * @param {string} tdei_dataset_id tdei_dataset_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteDataset(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<boolean>>>;
    /**
     * Edit metadata for the dataset. Returns status 200 if the action is successful.
     * @summary Edit metadata for the dataset
     * @param {Blob} file
     * @param {string} tdei_dataset_id tdei dataset id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    editMetadataForm(file: Blob, tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     * Downloads the dataset generated by the job
     * @summary Downloads the job download file
     * @param {string} job_id job_id uniquely represents the job request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    jobDownload(job_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     * Returns a json list of the versions of the TDEI API which are available.
     * @summary List available API versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listApiVersions(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<VersionList>>>;
    /**
     * This endpoint returns a list of url to zipped geojson files with Dataset data that meet the specified criteria. Criteria that can be specified include: a dataset area (polygon), minimum confidence level and Dataset version.
     * @summary List Dataset files meeting criteria.
     * @param {string} [data_type] Data type of the dataset.
     * @param {string} [status] Request datasets according to their status. By default, when the setting is &#x27;All&#x27;, it displays all datasets. If set to &#x27;Pre-Release&#x27; or &#x27;Publish&#x27;, it includes Pre-Release or Publish datasets for the project groups the user is a part of.
     * @param {string} [name] dataset name or title.
     * @param {string} [version] dataset version.
     * @param {string} [data_source] data source of the dataset.
     * @param {string} [collection_method] Method by which the data was collected.
     * @param {string} [collected_by] Collection agency or person.
     * @param {string} [derived_from_dataset_id] Derived from dataset id.
     * @param {string} [collection_date] Collection date time
     * @param {number} [confidence_level] Minimum confidence level required. Data returned will be at this confidence level or higher. Confidence level range is: 0 (very low confidence) to 100 (very high confidence).
     * @param {string} [schema_version] version name of the data type schema version that the application requests. list of versions can be found with /api/v1/{data_type}/versions.
     * @param {string} [tdei_project_group_id] tdei-assigned project group id. Represented as a UUID.
     * @param {string} [valid_from] Valid from date time. date-time for which the caller is interested in obtaining files.
     * @param {string} [valid_to] date-time for which the caller is interested in obtaining files. all files that are valid at the specified date-time and meet the other criteria will be returned.
     * @param {string} [tdei_dataset_id] tdei_dataset_id, unique id represents file.
     * @param {Array<number>} [bbox] A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.
     * @param {string} [other_published_locations] Other published locations
     * @param {number} [dataset_update_frequency_months] Dataset update frequency in months
     * @param {string} [schema_validation_run_description] Schema validation run description
     * @param {string} [full_dataset_name] Full dataset name
     * @param {string} [collection_name] Name of the collection
     * @param {string} [department_name] Name of the department
     * @param {string} [city] Name of the city
     * @param {string} [region] Name of the region
     * @param {string} [county] Name of the county
     * @param {string} [key_limitations_of_the_dataset] Key limitations of the dataset
     * @param {string} [challenges] Challenges faced in collecting the data
     * @param {Array<string>} [official_maintainer] Official maintainer of the dataset
     * @param {string} [last_updated] Date when the dataset was last updated
     * @param {string} [update_frequency] Frequency of updates
     * @param {string} [authorization_chain] Authorization chain
     * @param {boolean} [maintenance_funded] Is maintenance funded
     * @param {string} [funding_details] Funding details
     * @param {string} [point_data_collection_device] Point data collection device
     * @param {string} [node_locations_and_attributes_editing_software] Node locations and attributes editing software
     * @param {boolean} [data_collected_by_people] Is data collected by people
     * @param {string} [data_collectors] Data collectors
     * @param {boolean} [data_captured_automatically] Is data captured automatically
     * @param {string} [automated_collection] Automated collection
     * @param {string} [data_collectors_organization] Data collectors organization
     * @param {string} [data_collector_compensation] Data collector compensation
     * @param {string} [preprocessing_location] Preprocessing location
     * @param {string} [preprocessing_by] Preprocessing by
     * @param {string} [preprocessing_steps] Preprocessing steps
     * @param {boolean} [data_collection_preprocessing_documentation] Is data collection preprocessing documentation available
     * @param {string} [documentation_uri] Documentation URI
     * @param {boolean} [validation_process_exists] Is validation process exists
     * @param {string} [validation_process_description] Validation process description
     * @param {string} [validation_conducted_by] Validation conducted by
     * @param {string} [excluded_data] Excluded data
     * @param {string} [excluded_data_reason] Excluded data reason
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetFiles(data_type?: string, status?: string, name?: string, version?: string, data_source?: string, collection_method?: string, collected_by?: string, derived_from_dataset_id?: string, collection_date?: string, confidence_level?: number, schema_version?: string, tdei_project_group_id?: string, valid_from?: string, valid_to?: string, tdei_dataset_id?: string, bbox?: Array<number>, other_published_locations?: string, dataset_update_frequency_months?: number, schema_validation_run_description?: string, full_dataset_name?: string, collection_name?: string, department_name?: string, city?: string, region?: string, county?: string, key_limitations_of_the_dataset?: string, challenges?: string, official_maintainer?: Array<string>, last_updated?: string, update_frequency?: string, authorization_chain?: string, maintenance_funded?: boolean, funding_details?: string, point_data_collection_device?: string, node_locations_and_attributes_editing_software?: string, data_collected_by_people?: boolean, data_collectors?: string, data_captured_automatically?: boolean, automated_collection?: string, data_collectors_organization?: string, data_collector_compensation?: string, preprocessing_location?: string, preprocessing_by?: string, preprocessing_steps?: string, data_collection_preprocessing_documentation?: boolean, documentation_uri?: string, validation_process_exists?: boolean, validation_process_description?: string, validation_conducted_by?: string, excluded_data?: string, excluded_data_reason?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<DatasetItem>>>>;
    /**
     * This endpoint returns a list of jobs with status and request details.
     * @summary List job details.
     * @param {string} [job_id] job_id uniquely identifies the job request.
     * @param {boolean} [show_group_jobs] Show all the jobs within the project group.
     * @param {string} [job_type] job_type of the job.
     * @param {string} [status] Status of the job.
     * @param {string} [tdei_project_group_id] project group id. Represented as a UUID.
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listJobs(job_id?: string, show_group_jobs?: boolean, job_type?: string, status?: string, tdei_project_group_id?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<JobDetails>>>>;
    /**
     * Path used to retrieve the list of project groups with data in the TDEI system. Allows callers to get the tdei_project_group_id id for an project group.  Returns the tdei_project_group_id and project group information for all project groups with data in the TDEI system.
     * @summary List project groups
     * @param {string} [tdei_project_group_id] Search by project group Id.
     * @param {string} [searchText] Search by project group name.
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listProjectGroups(tdei_project_group_id?: string, searchText?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<ProjectGroup>>>>;
    /**
     * Path used to retrieve the list of Services in the TDEI system. Allows callers to get the tdei_service_id id for a service.  Returns the tdei_service_id and service name for all services in the TDEI system.   If tdei_project_group_id param is used, will return services for that project group.
     * @summary List Services
     * @param {string} [tdei_service_id] Search by service Id.
     * @param {string} [searchText] Search by service name.
     * @param {string} [tdei_project_group_id] A tdei-assigned id for an project group. project_group_ids can be retrieved using the path /api/v1/project-group.
     * @param {string} [service_type] Service type
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listServices(tdei_service_id?: string, searchText?: string, tdei_project_group_id?: string, service_type?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<ServiceModel>>>>;
};
/**
 * GeneralApi - factory interface
 * @export
 */
export declare const GeneralApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Clone the dataset `tdei_dataset_id` to the designated project group `tdei_project_group_id` and service `tdei_service_id`. Returns cloned dataset id if the action is successful.
     * @summary Clones the provided dataset to the designated project group and service.
     * @param {Blob} file
     * @param {string} tdei_dataset_id tdei dataset id to be cloned
     * @param {string} tdei_project_group_id tdei project group id. Represented as UUID.
     * @param {string} tdei_service_id tdei service id associated with project group id. Represented as UUID.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cloneDatasetForm(file: Blob, tdei_dataset_id: string, tdei_project_group_id: string, tdei_service_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * Returns boolean true if the action is successful.
     * @summary Invalidates the Dataset
     * @param {string} tdei_dataset_id tdei_dataset_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteDataset(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<boolean>>;
    /**
     * Edit metadata for the dataset. Returns status 200 if the action is successful.
     * @summary Edit metadata for the dataset
     * @param {Blob} file
     * @param {string} tdei_dataset_id tdei dataset id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    editMetadataForm(file: Blob, tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Downloads the dataset generated by the job
     * @summary Downloads the job download file
     * @param {string} job_id job_id uniquely represents the job request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    jobDownload(job_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Returns a json list of the versions of the TDEI API which are available.
     * @summary List available API versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listApiVersions(options?: AxiosRequestConfig): Promise<AxiosResponse<VersionList>>;
    /**
     * This endpoint returns a list of url to zipped geojson files with Dataset data that meet the specified criteria. Criteria that can be specified include: a dataset area (polygon), minimum confidence level and Dataset version.
     * @summary List Dataset files meeting criteria.
     * @param {string} [data_type] Data type of the dataset.
     * @param {string} [status] Request datasets according to their status. By default, when the setting is &#x27;All&#x27;, it displays all datasets. If set to &#x27;Pre-Release&#x27; or &#x27;Publish&#x27;, it includes Pre-Release or Publish datasets for the project groups the user is a part of.
     * @param {string} [name] dataset name or title.
     * @param {string} [version] dataset version.
     * @param {string} [data_source] data source of the dataset.
     * @param {string} [collection_method] Method by which the data was collected.
     * @param {string} [collected_by] Collection agency or person.
     * @param {string} [derived_from_dataset_id] Derived from dataset id.
     * @param {string} [collection_date] Collection date time
     * @param {number} [confidence_level] Minimum confidence level required. Data returned will be at this confidence level or higher. Confidence level range is: 0 (very low confidence) to 100 (very high confidence).
     * @param {string} [schema_version] version name of the data type schema version that the application requests. list of versions can be found with /api/v1/{data_type}/versions.
     * @param {string} [tdei_project_group_id] tdei-assigned project group id. Represented as a UUID.
     * @param {string} [valid_from] Valid from date time. date-time for which the caller is interested in obtaining files.
     * @param {string} [valid_to] date-time for which the caller is interested in obtaining files. all files that are valid at the specified date-time and meet the other criteria will be returned.
     * @param {string} [tdei_dataset_id] tdei_dataset_id, unique id represents file.
     * @param {Array<number>} [bbox] A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.
     * @param {string} [other_published_locations] Other published locations
     * @param {number} [dataset_update_frequency_months] Dataset update frequency in months
     * @param {string} [schema_validation_run_description] Schema validation run description
     * @param {string} [full_dataset_name] Full dataset name
     * @param {string} [collection_name] Name of the collection
     * @param {string} [department_name] Name of the department
     * @param {string} [city] Name of the city
     * @param {string} [region] Name of the region
     * @param {string} [county] Name of the county
     * @param {string} [key_limitations_of_the_dataset] Key limitations of the dataset
     * @param {string} [challenges] Challenges faced in collecting the data
     * @param {Array<string>} [official_maintainer] Official maintainer of the dataset
     * @param {string} [last_updated] Date when the dataset was last updated
     * @param {string} [update_frequency] Frequency of updates
     * @param {string} [authorization_chain] Authorization chain
     * @param {boolean} [maintenance_funded] Is maintenance funded
     * @param {string} [funding_details] Funding details
     * @param {string} [point_data_collection_device] Point data collection device
     * @param {string} [node_locations_and_attributes_editing_software] Node locations and attributes editing software
     * @param {boolean} [data_collected_by_people] Is data collected by people
     * @param {string} [data_collectors] Data collectors
     * @param {boolean} [data_captured_automatically] Is data captured automatically
     * @param {string} [automated_collection] Automated collection
     * @param {string} [data_collectors_organization] Data collectors organization
     * @param {string} [data_collector_compensation] Data collector compensation
     * @param {string} [preprocessing_location] Preprocessing location
     * @param {string} [preprocessing_by] Preprocessing by
     * @param {string} [preprocessing_steps] Preprocessing steps
     * @param {boolean} [data_collection_preprocessing_documentation] Is data collection preprocessing documentation available
     * @param {string} [documentation_uri] Documentation URI
     * @param {boolean} [validation_process_exists] Is validation process exists
     * @param {string} [validation_process_description] Validation process description
     * @param {string} [validation_conducted_by] Validation conducted by
     * @param {string} [excluded_data] Excluded data
     * @param {string} [excluded_data_reason] Excluded data reason
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetFiles(data_type?: string, status?: string, name?: string, version?: string, data_source?: string, collection_method?: string, collected_by?: string, derived_from_dataset_id?: string, collection_date?: string, confidence_level?: number, schema_version?: string, tdei_project_group_id?: string, valid_from?: string, valid_to?: string, tdei_dataset_id?: string, bbox?: Array<number>, other_published_locations?: string, dataset_update_frequency_months?: number, schema_validation_run_description?: string, full_dataset_name?: string, collection_name?: string, department_name?: string, city?: string, region?: string, county?: string, key_limitations_of_the_dataset?: string, challenges?: string, official_maintainer?: Array<string>, last_updated?: string, update_frequency?: string, authorization_chain?: string, maintenance_funded?: boolean, funding_details?: string, point_data_collection_device?: string, node_locations_and_attributes_editing_software?: string, data_collected_by_people?: boolean, data_collectors?: string, data_captured_automatically?: boolean, automated_collection?: string, data_collectors_organization?: string, data_collector_compensation?: string, preprocessing_location?: string, preprocessing_by?: string, preprocessing_steps?: string, data_collection_preprocessing_documentation?: boolean, documentation_uri?: string, validation_process_exists?: boolean, validation_process_description?: string, validation_conducted_by?: string, excluded_data?: string, excluded_data_reason?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<DatasetItem>>>;
    /**
     * This endpoint returns a list of jobs with status and request details.
     * @summary List job details.
     * @param {string} [job_id] job_id uniquely identifies the job request.
     * @param {boolean} [show_group_jobs] Show all the jobs within the project group.
     * @param {string} [job_type] job_type of the job.
     * @param {string} [status] Status of the job.
     * @param {string} [tdei_project_group_id] project group id. Represented as a UUID.
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listJobs(job_id?: string, show_group_jobs?: boolean, job_type?: string, status?: string, tdei_project_group_id?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<JobDetails>>>;
    /**
     * Path used to retrieve the list of project groups with data in the TDEI system. Allows callers to get the tdei_project_group_id id for an project group.  Returns the tdei_project_group_id and project group information for all project groups with data in the TDEI system.
     * @summary List project groups
     * @param {string} [tdei_project_group_id] Search by project group Id.
     * @param {string} [searchText] Search by project group name.
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listProjectGroups(tdei_project_group_id?: string, searchText?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<ProjectGroup>>>;
    /**
     * Path used to retrieve the list of Services in the TDEI system. Allows callers to get the tdei_service_id id for a service.  Returns the tdei_service_id and service name for all services in the TDEI system.   If tdei_project_group_id param is used, will return services for that project group.
     * @summary List Services
     * @param {string} [tdei_service_id] Search by service Id.
     * @param {string} [searchText] Search by service name.
     * @param {string} [tdei_project_group_id] A tdei-assigned id for an project group. project_group_ids can be retrieved using the path /api/v1/project-group.
     * @param {string} [service_type] Service type
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listServices(tdei_service_id?: string, searchText?: string, tdei_project_group_id?: string, service_type?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<ServiceModel>>>;
};
/**
 * GeneralApi - object-oriented interface
 * @export
 * @class GeneralApi
 * @extends {BaseAPI}
 */
export declare class GeneralApi extends BaseAPI {
    /**
     * Clone the dataset `tdei_dataset_id` to the designated project group `tdei_project_group_id` and service `tdei_service_id`. Returns cloned dataset id if the action is successful.
     * @summary Clones the provided dataset to the designated project group and service.
     * @param {Blob} file
     * @param {string} tdei_dataset_id tdei dataset id to be cloned
     * @param {string} tdei_project_group_id tdei project group id. Represented as UUID.
     * @param {string} tdei_service_id tdei service id associated with project group id. Represented as UUID.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GeneralApi
     */
    cloneDatasetForm(file: Blob, tdei_dataset_id: string, tdei_project_group_id: string, tdei_service_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * Returns boolean true if the action is successful.
     * @summary Invalidates the Dataset
     * @param {string} tdei_dataset_id tdei_dataset_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GeneralApi
     */
    deleteDataset(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<boolean>>;
    /**
     * Edit metadata for the dataset. Returns status 200 if the action is successful.
     * @summary Edit metadata for the dataset
     * @param {Blob} file
     * @param {string} tdei_dataset_id tdei dataset id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GeneralApi
     */
    editMetadataForm(file: Blob, tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Downloads the dataset generated by the job
     * @summary Downloads the job download file
     * @param {string} job_id job_id uniquely represents the job request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GeneralApi
     */
    jobDownload(job_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Returns a json list of the versions of the TDEI API which are available.
     * @summary List available API versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GeneralApi
     */
    listApiVersions(options?: AxiosRequestConfig): Promise<AxiosResponse<VersionList>>;
    /**
     * This endpoint returns a list of url to zipped geojson files with Dataset data that meet the specified criteria. Criteria that can be specified include: a dataset area (polygon), minimum confidence level and Dataset version.
     * @summary List Dataset files meeting criteria.
     * @param {string} [data_type] Data type of the dataset.
     * @param {string} [status] Request datasets according to their status. By default, when the setting is &#x27;All&#x27;, it displays all datasets. If set to &#x27;Pre-Release&#x27; or &#x27;Publish&#x27;, it includes Pre-Release or Publish datasets for the project groups the user is a part of.
     * @param {string} [name] dataset name or title.
     * @param {string} [version] dataset version.
     * @param {string} [data_source] data source of the dataset.
     * @param {string} [collection_method] Method by which the data was collected.
     * @param {string} [collected_by] Collection agency or person.
     * @param {string} [derived_from_dataset_id] Derived from dataset id.
     * @param {string} [collection_date] Collection date time
     * @param {number} [confidence_level] Minimum confidence level required. Data returned will be at this confidence level or higher. Confidence level range is: 0 (very low confidence) to 100 (very high confidence).
     * @param {string} [schema_version] version name of the data type schema version that the application requests. list of versions can be found with /api/v1/{data_type}/versions.
     * @param {string} [tdei_project_group_id] tdei-assigned project group id. Represented as a UUID.
     * @param {string} [valid_from] Valid from date time. date-time for which the caller is interested in obtaining files.
     * @param {string} [valid_to] date-time for which the caller is interested in obtaining files. all files that are valid at the specified date-time and meet the other criteria will be returned.
     * @param {string} [tdei_dataset_id] tdei_dataset_id, unique id represents file.
     * @param {Array<number>} [bbox] A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.
     * @param {string} [other_published_locations] Other published locations
     * @param {number} [dataset_update_frequency_months] Dataset update frequency in months
     * @param {string} [schema_validation_run_description] Schema validation run description
     * @param {string} [full_dataset_name] Full dataset name
     * @param {string} [collection_name] Name of the collection
     * @param {string} [department_name] Name of the department
     * @param {string} [city] Name of the city
     * @param {string} [region] Name of the region
     * @param {string} [county] Name of the county
     * @param {string} [key_limitations_of_the_dataset] Key limitations of the dataset
     * @param {string} [challenges] Challenges faced in collecting the data
     * @param {Array<string>} [official_maintainer] Official maintainer of the dataset
     * @param {string} [last_updated] Date when the dataset was last updated
     * @param {string} [update_frequency] Frequency of updates
     * @param {string} [authorization_chain] Authorization chain
     * @param {boolean} [maintenance_funded] Is maintenance funded
     * @param {string} [funding_details] Funding details
     * @param {string} [point_data_collection_device] Point data collection device
     * @param {string} [node_locations_and_attributes_editing_software] Node locations and attributes editing software
     * @param {boolean} [data_collected_by_people] Is data collected by people
     * @param {string} [data_collectors] Data collectors
     * @param {boolean} [data_captured_automatically] Is data captured automatically
     * @param {string} [automated_collection] Automated collection
     * @param {string} [data_collectors_organization] Data collectors organization
     * @param {string} [data_collector_compensation] Data collector compensation
     * @param {string} [preprocessing_location] Preprocessing location
     * @param {string} [preprocessing_by] Preprocessing by
     * @param {string} [preprocessing_steps] Preprocessing steps
     * @param {boolean} [data_collection_preprocessing_documentation] Is data collection preprocessing documentation available
     * @param {string} [documentation_uri] Documentation URI
     * @param {boolean} [validation_process_exists] Is validation process exists
     * @param {string} [validation_process_description] Validation process description
     * @param {string} [validation_conducted_by] Validation conducted by
     * @param {string} [excluded_data] Excluded data
     * @param {string} [excluded_data_reason] Excluded data reason
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GeneralApi
     */
    listDatasetFiles(data_type?: string, status?: string, name?: string, version?: string, data_source?: string, collection_method?: string, collected_by?: string, derived_from_dataset_id?: string, collection_date?: string, confidence_level?: number, schema_version?: string, tdei_project_group_id?: string, valid_from?: string, valid_to?: string, tdei_dataset_id?: string, bbox?: Array<number>, other_published_locations?: string, dataset_update_frequency_months?: number, schema_validation_run_description?: string, full_dataset_name?: string, collection_name?: string, department_name?: string, city?: string, region?: string, county?: string, key_limitations_of_the_dataset?: string, challenges?: string, official_maintainer?: Array<string>, last_updated?: string, update_frequency?: string, authorization_chain?: string, maintenance_funded?: boolean, funding_details?: string, point_data_collection_device?: string, node_locations_and_attributes_editing_software?: string, data_collected_by_people?: boolean, data_collectors?: string, data_captured_automatically?: boolean, automated_collection?: string, data_collectors_organization?: string, data_collector_compensation?: string, preprocessing_location?: string, preprocessing_by?: string, preprocessing_steps?: string, data_collection_preprocessing_documentation?: boolean, documentation_uri?: string, validation_process_exists?: boolean, validation_process_description?: string, validation_conducted_by?: string, excluded_data?: string, excluded_data_reason?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<DatasetItem>>>;
    /**
     * This endpoint returns a list of jobs with status and request details.
     * @summary List job details.
     * @param {string} [job_id] job_id uniquely identifies the job request.
     * @param {boolean} [show_group_jobs] Show all the jobs within the project group.
     * @param {string} [job_type] job_type of the job.
     * @param {string} [status] Status of the job.
     * @param {string} [tdei_project_group_id] project group id. Represented as a UUID.
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GeneralApi
     */
    listJobs(job_id?: string, show_group_jobs?: boolean, job_type?: string, status?: string, tdei_project_group_id?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<JobDetails>>>;
    /**
     * Path used to retrieve the list of project groups with data in the TDEI system. Allows callers to get the tdei_project_group_id id for an project group.  Returns the tdei_project_group_id and project group information for all project groups with data in the TDEI system.
     * @summary List project groups
     * @param {string} [tdei_project_group_id] Search by project group Id.
     * @param {string} [searchText] Search by project group name.
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GeneralApi
     */
    listProjectGroups(tdei_project_group_id?: string, searchText?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<ProjectGroup>>>;
    /**
     * Path used to retrieve the list of Services in the TDEI system. Allows callers to get the tdei_service_id id for a service.  Returns the tdei_service_id and service name for all services in the TDEI system.   If tdei_project_group_id param is used, will return services for that project group.
     * @summary List Services
     * @param {string} [tdei_service_id] Search by service Id.
     * @param {string} [searchText] Search by service name.
     * @param {string} [tdei_project_group_id] A tdei-assigned id for an project group. project_group_ids can be retrieved using the path /api/v1/project-group.
     * @param {string} [service_type] Service type
     * @param {number} [page_no] Integer, defaults to 1.
     * @param {number} [page_size] page size. integer, between 1 to 50, defaults to 10.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GeneralApi
     */
    listServices(tdei_service_id?: string, searchText?: string, tdei_project_group_id?: string, service_type?: string, page_no?: number, page_size?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<ServiceModel>>>;
}
