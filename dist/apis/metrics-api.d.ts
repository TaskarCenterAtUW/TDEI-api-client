/**
 * TDEI Gateway Dev API
 * This is an API for interacting with the Transportation Data Equity Initiative (TDEI) data system. It is intended for applications producing data to and consuming data from the TDEI system. It currently supports GTFS-Pathways, GTFS-Flex v2 and OpenSidewalks v0.2 data schemas.
 *
 * OpenAPI spec version: v0.1
 * Contact: tdei@uw.edu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
/**
 * MetricsApi - axios parameter creator
 * @export
 */
export declare const MetricsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Gets the data metrics
     * @summary Gets the data metrics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dataMetrics: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Gets the system metrics
     * @summary Gets the system metrics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    systemMetrics: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * MetricsApi - functional programming interface
 * @export
 */
export declare const MetricsApiFp: (configuration?: Configuration) => {
    /**
     * Gets the data metrics
     * @summary Gets the data metrics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dataMetrics(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<any>>>;
    /**
     * Gets the system metrics
     * @summary Gets the system metrics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    systemMetrics(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<any>>>;
};
/**
 * MetricsApi - factory interface
 * @export
 */
export declare const MetricsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Gets the data metrics
     * @summary Gets the data metrics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    dataMetrics(options?: AxiosRequestConfig): Promise<AxiosResponse<any>>;
    /**
     * Gets the system metrics
     * @summary Gets the system metrics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    systemMetrics(options?: AxiosRequestConfig): Promise<AxiosResponse<any>>;
};
/**
 * MetricsApi - object-oriented interface
 * @export
 * @class MetricsApi
 * @extends {BaseAPI}
 */
export declare class MetricsApi extends BaseAPI {
    /**
     * Gets the data metrics
     * @summary Gets the data metrics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MetricsApi
     */
    dataMetrics(options?: AxiosRequestConfig): Promise<AxiosResponse<any>>;
    /**
     * Gets the system metrics
     * @summary Gets the system metrics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MetricsApi
     */
    systemMetrics(options?: AxiosRequestConfig): Promise<AxiosResponse<any>>;
}
