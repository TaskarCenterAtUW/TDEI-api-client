/**
 * TDEI Gateway Dev API
 * This is an API for interacting with the Transportation Data Equity Initiative (TDEI) system. It is intended for applications submitting data to and consuming data from the TDEI system. We currently support GTFS-Pathways, GTFS-Flex and OpenSidewalks (OSW) data schemas.
 *
 * OpenAPI spec version: v0.1
 * Contact: tdei@uw.edu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { VersionList } from '../models';
/**
 * GTFSPathwaysApi - axios parameter creator
 * @export
 */
export declare const GTFSPathwaysApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Download a specific GTFS Pathways dataset as zip containing .txt files that represent transit details.
     * @summary Downloads the GTFS Pathways dataset
     * @param {string} tdei_dataset_id Dataset id of the dataset to be downloaded.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getGtfsPathwaysFile: (tdei_dataset_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List of GTFS Pathways data standard versions supported by TDEI. The response includes a link to the GTFS Pathways data standard and specification.
     * @summary List available GTFS Pathways versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listGtfsPathwaysVersions: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Publishes an GTFS Pathways dataset that was previously uploaded via the [POST] /gtfs-pathways endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.
     * @summary Publishes the GTFS Pathways dataset for the tdei_dataset_id
     * @param {string} tdei_dataset_id Dataset id of the dataset to be published.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishGtfsPathwaysFile: (tdei_dataset_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This endpoint enables users to upload a GTFS-Pathways dataset. The request must include the required parameters to complete the upload. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint. By default, the dataset's status will be set to 'pre-release.' The dataset can be published using the /publish endpoint.
     * @summary upload a pre-release of GTFS Pathways dataset.
     * @param {Blob} dataset
     * @param {Blob} metadata
     * @param {Blob} changeset
     * @param {string} tdei_project_group_id Project group id to which the dataset would be uploaded
     * @param {string} tdei_service_id TDEI service id associated with the above project group id.
     * @param {string} [derived_from_dataset_id] Dataset id from which this dataset was derived.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadGtfsPathwaysFileForm: (dataset: Blob, metadata: Blob, changeset: Blob, tdei_project_group_id: string, tdei_service_id: string, derived_from_dataset_id?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Allows a user to validate GTFS Pathways dataset to check the correctness of data. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.
     * @summary Validates the GTFS Pathways dataset.
     * @param {Blob} dataset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateGtfsPathwaysFileForm: (dataset: Blob, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * GTFSPathwaysApi - functional programming interface
 * @export
 */
export declare const GTFSPathwaysApiFp: (configuration?: Configuration) => {
    /**
     * Download a specific GTFS Pathways dataset as zip containing .txt files that represent transit details.
     * @summary Downloads the GTFS Pathways dataset
     * @param {string} tdei_dataset_id Dataset id of the dataset to be downloaded.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getGtfsPathwaysFile(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     * List of GTFS Pathways data standard versions supported by TDEI. The response includes a link to the GTFS Pathways data standard and specification.
     * @summary List available GTFS Pathways versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listGtfsPathwaysVersions(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<VersionList>>>;
    /**
     * Publishes an GTFS Pathways dataset that was previously uploaded via the [POST] /gtfs-pathways endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.
     * @summary Publishes the GTFS Pathways dataset for the tdei_dataset_id
     * @param {string} tdei_dataset_id Dataset id of the dataset to be published.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishGtfsPathwaysFile(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<string>>>;
    /**
     * This endpoint enables users to upload a GTFS-Pathways dataset. The request must include the required parameters to complete the upload. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint. By default, the dataset's status will be set to 'pre-release.' The dataset can be published using the /publish endpoint.
     * @summary upload a pre-release of GTFS Pathways dataset.
     * @param {Blob} dataset
     * @param {Blob} metadata
     * @param {Blob} changeset
     * @param {string} tdei_project_group_id Project group id to which the dataset would be uploaded
     * @param {string} tdei_service_id TDEI service id associated with the above project group id.
     * @param {string} [derived_from_dataset_id] Dataset id from which this dataset was derived.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadGtfsPathwaysFileForm(dataset: Blob, metadata: Blob, changeset: Blob, tdei_project_group_id: string, tdei_service_id: string, derived_from_dataset_id?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<string>>>;
    /**
     * Allows a user to validate GTFS Pathways dataset to check the correctness of data. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.
     * @summary Validates the GTFS Pathways dataset.
     * @param {Blob} dataset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateGtfsPathwaysFileForm(dataset: Blob, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<string>>>;
};
/**
 * GTFSPathwaysApi - factory interface
 * @export
 */
export declare const GTFSPathwaysApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Download a specific GTFS Pathways dataset as zip containing .txt files that represent transit details.
     * @summary Downloads the GTFS Pathways dataset
     * @param {string} tdei_dataset_id Dataset id of the dataset to be downloaded.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getGtfsPathwaysFile(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * List of GTFS Pathways data standard versions supported by TDEI. The response includes a link to the GTFS Pathways data standard and specification.
     * @summary List available GTFS Pathways versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listGtfsPathwaysVersions(options?: AxiosRequestConfig): Promise<AxiosResponse<VersionList>>;
    /**
     * Publishes an GTFS Pathways dataset that was previously uploaded via the [POST] /gtfs-pathways endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.
     * @summary Publishes the GTFS Pathways dataset for the tdei_dataset_id
     * @param {string} tdei_dataset_id Dataset id of the dataset to be published.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishGtfsPathwaysFile(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * This endpoint enables users to upload a GTFS-Pathways dataset. The request must include the required parameters to complete the upload. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint. By default, the dataset's status will be set to 'pre-release.' The dataset can be published using the /publish endpoint.
     * @summary upload a pre-release of GTFS Pathways dataset.
     * @param {Blob} dataset
     * @param {Blob} metadata
     * @param {Blob} changeset
     * @param {string} tdei_project_group_id Project group id to which the dataset would be uploaded
     * @param {string} tdei_service_id TDEI service id associated with the above project group id.
     * @param {string} [derived_from_dataset_id] Dataset id from which this dataset was derived.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadGtfsPathwaysFileForm(dataset: Blob, metadata: Blob, changeset: Blob, tdei_project_group_id: string, tdei_service_id: string, derived_from_dataset_id?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * Allows a user to validate GTFS Pathways dataset to check the correctness of data. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.
     * @summary Validates the GTFS Pathways dataset.
     * @param {Blob} dataset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateGtfsPathwaysFileForm(dataset: Blob, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
};
/**
 * GTFSPathwaysApi - object-oriented interface
 * @export
 * @class GTFSPathwaysApi
 * @extends {BaseAPI}
 */
export declare class GTFSPathwaysApi extends BaseAPI {
    /**
     * Download a specific GTFS Pathways dataset as zip containing .txt files that represent transit details.
     * @summary Downloads the GTFS Pathways dataset
     * @param {string} tdei_dataset_id Dataset id of the dataset to be downloaded.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GTFSPathwaysApi
     */
    getGtfsPathwaysFile(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * List of GTFS Pathways data standard versions supported by TDEI. The response includes a link to the GTFS Pathways data standard and specification.
     * @summary List available GTFS Pathways versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GTFSPathwaysApi
     */
    listGtfsPathwaysVersions(options?: AxiosRequestConfig): Promise<AxiosResponse<VersionList>>;
    /**
     * Publishes an GTFS Pathways dataset that was previously uploaded via the [POST] /gtfs-pathways endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.
     * @summary Publishes the GTFS Pathways dataset for the tdei_dataset_id
     * @param {string} tdei_dataset_id Dataset id of the dataset to be published.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GTFSPathwaysApi
     */
    publishGtfsPathwaysFile(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * This endpoint enables users to upload a GTFS-Pathways dataset. The request must include the required parameters to complete the upload. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint. By default, the dataset's status will be set to 'pre-release.' The dataset can be published using the /publish endpoint.
     * @summary upload a pre-release of GTFS Pathways dataset.
     * @param {Blob} dataset
     * @param {Blob} metadata
     * @param {Blob} changeset
     * @param {string} tdei_project_group_id Project group id to which the dataset would be uploaded
     * @param {string} tdei_service_id TDEI service id associated with the above project group id.
     * @param {string} [derived_from_dataset_id] Dataset id from which this dataset was derived.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GTFSPathwaysApi
     */
    uploadGtfsPathwaysFileForm(dataset: Blob, metadata: Blob, changeset: Blob, tdei_project_group_id: string, tdei_service_id: string, derived_from_dataset_id?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * Allows a user to validate GTFS Pathways dataset to check the correctness of data. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.
     * @summary Validates the GTFS Pathways dataset.
     * @param {Blob} dataset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GTFSPathwaysApi
     */
    validateGtfsPathwaysFileForm(dataset: Blob, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
}
