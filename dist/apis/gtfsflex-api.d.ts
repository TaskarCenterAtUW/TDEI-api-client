/**
 * TDEI Gateway API
 * This is an API for publishing data to the Transportation Data Equity Initiative (TDEI) data system. This API is intended for applications producing data for and consuming data from the TDEI system. This API supports publishing of GTFS-Pathways, GTFS-Flex v2 and OpenSidewalks data to the TDEI.
 *
 * OpenAPI spec version: v0.1
 * Contact: placeholder_support@transequity.cs.washington.edu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { VersionList } from '../models';
/**
 * GTFSFlexApi - axios parameter creator
 * @export
 */
export declare const GTFSFlexApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * returns a specific GTFS Flex file as zip containing metadata, dataset, and changeset identified by the tdei_record_id
     * @summary downloads the GTFS Flex files as zip
     * @param {string} tdei_dataset_id tdei_dataset_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getGtfsFlexFile: (tdei_dataset_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Lists the versions of GTFS Flex data which are supported by TDEI.
     * @summary List available GTFS Flex versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listGtfsFlexVersions: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Publishes an GTFS Flex dataset that was previously uploaded via the [POST] /gtfs-flex endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers. Returns the job_id of the uploaded file. For checking the status of the upload, refer to the Location header in the response, which contains the URL for the status API endpoint.
     * @summary Publishes the GTFS Flex dataset for the tdei_dataset_id
     * @param {string} tdei_dataset_id tdei_dataset_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishGtfsFlexFile: (tdei_dataset_id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This path allows a user to upload pre-release GTFS Flex dataset. The caller must provide metadata about the file - includes information about how and when the data was collected and valid dates of the file. Returns the job_id of the uploaded file. For checking the status of the upload, refer to the Location header in the response, which contains the URL for the status API endpoint.
     * @summary upload a pre-release of GTFS Flex dataset.
     * @param {Blob} dataset
     * @param {Blob} metadata
     * @param {Blob} changeset
     * @param {string} tdei_project_group_id tdei project group id. Represented as UUID.
     * @param {string} tdei_service_id tdei service id associated with project group id. Represented as UUID.
     * @param {string} [derived_from_dataset_id] Dataset id from which this dataset was derived
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadGtfsFlexFileForm: (dataset: Blob, metadata: Blob, changeset: Blob, tdei_project_group_id: string, tdei_service_id: string, derived_from_dataset_id?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Allows a user to validate GTFS Flex dataset to check the correctness of data. Returns the job_id for validation request. For checking the status, refer to the Location header in the response, which contains the URL for the status API endpoint.
     * @summary Validates the GTFS Flex dataset.
     * @param {Blob} dataset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateGtfsFlexFileForm: (dataset: Blob, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * GTFSFlexApi - functional programming interface
 * @export
 */
export declare const GTFSFlexApiFp: (configuration?: Configuration) => {
    /**
     * returns a specific GTFS Flex file as zip containing metadata, dataset, and changeset identified by the tdei_record_id
     * @summary downloads the GTFS Flex files as zip
     * @param {string} tdei_dataset_id tdei_dataset_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getGtfsFlexFile(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     * Lists the versions of GTFS Flex data which are supported by TDEI.
     * @summary List available GTFS Flex versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listGtfsFlexVersions(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<VersionList>>>;
    /**
     * Publishes an GTFS Flex dataset that was previously uploaded via the [POST] /gtfs-flex endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers. Returns the job_id of the uploaded file. For checking the status of the upload, refer to the Location header in the response, which contains the URL for the status API endpoint.
     * @summary Publishes the GTFS Flex dataset for the tdei_dataset_id
     * @param {string} tdei_dataset_id tdei_dataset_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishGtfsFlexFile(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<string>>>;
    /**
     * This path allows a user to upload pre-release GTFS Flex dataset. The caller must provide metadata about the file - includes information about how and when the data was collected and valid dates of the file. Returns the job_id of the uploaded file. For checking the status of the upload, refer to the Location header in the response, which contains the URL for the status API endpoint.
     * @summary upload a pre-release of GTFS Flex dataset.
     * @param {Blob} dataset
     * @param {Blob} metadata
     * @param {Blob} changeset
     * @param {string} tdei_project_group_id tdei project group id. Represented as UUID.
     * @param {string} tdei_service_id tdei service id associated with project group id. Represented as UUID.
     * @param {string} [derived_from_dataset_id] Dataset id from which this dataset was derived
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadGtfsFlexFileForm(dataset: Blob, metadata: Blob, changeset: Blob, tdei_project_group_id: string, tdei_service_id: string, derived_from_dataset_id?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<string>>>;
    /**
     * Allows a user to validate GTFS Flex dataset to check the correctness of data. Returns the job_id for validation request. For checking the status, refer to the Location header in the response, which contains the URL for the status API endpoint.
     * @summary Validates the GTFS Flex dataset.
     * @param {Blob} dataset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateGtfsFlexFileForm(dataset: Blob, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<string>>>;
};
/**
 * GTFSFlexApi - factory interface
 * @export
 */
export declare const GTFSFlexApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * returns a specific GTFS Flex file as zip containing metadata, dataset, and changeset identified by the tdei_record_id
     * @summary downloads the GTFS Flex files as zip
     * @param {string} tdei_dataset_id tdei_dataset_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getGtfsFlexFile(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Lists the versions of GTFS Flex data which are supported by TDEI.
     * @summary List available GTFS Flex versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listGtfsFlexVersions(options?: AxiosRequestConfig): Promise<AxiosResponse<VersionList>>;
    /**
     * Publishes an GTFS Flex dataset that was previously uploaded via the [POST] /gtfs-flex endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers. Returns the job_id of the uploaded file. For checking the status of the upload, refer to the Location header in the response, which contains the URL for the status API endpoint.
     * @summary Publishes the GTFS Flex dataset for the tdei_dataset_id
     * @param {string} tdei_dataset_id tdei_dataset_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishGtfsFlexFile(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * This path allows a user to upload pre-release GTFS Flex dataset. The caller must provide metadata about the file - includes information about how and when the data was collected and valid dates of the file. Returns the job_id of the uploaded file. For checking the status of the upload, refer to the Location header in the response, which contains the URL for the status API endpoint.
     * @summary upload a pre-release of GTFS Flex dataset.
     * @param {Blob} dataset
     * @param {Blob} metadata
     * @param {Blob} changeset
     * @param {string} tdei_project_group_id tdei project group id. Represented as UUID.
     * @param {string} tdei_service_id tdei service id associated with project group id. Represented as UUID.
     * @param {string} [derived_from_dataset_id] Dataset id from which this dataset was derived
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadGtfsFlexFileForm(dataset: Blob, metadata: Blob, changeset: Blob, tdei_project_group_id: string, tdei_service_id: string, derived_from_dataset_id?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * Allows a user to validate GTFS Flex dataset to check the correctness of data. Returns the job_id for validation request. For checking the status, refer to the Location header in the response, which contains the URL for the status API endpoint.
     * @summary Validates the GTFS Flex dataset.
     * @param {Blob} dataset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateGtfsFlexFileForm(dataset: Blob, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
};
/**
 * GTFSFlexApi - object-oriented interface
 * @export
 * @class GTFSFlexApi
 * @extends {BaseAPI}
 */
export declare class GTFSFlexApi extends BaseAPI {
    /**
     * returns a specific GTFS Flex file as zip containing metadata, dataset, and changeset identified by the tdei_record_id
     * @summary downloads the GTFS Flex files as zip
     * @param {string} tdei_dataset_id tdei_dataset_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GTFSFlexApi
     */
    getGtfsFlexFile(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     * Lists the versions of GTFS Flex data which are supported by TDEI.
     * @summary List available GTFS Flex versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GTFSFlexApi
     */
    listGtfsFlexVersions(options?: AxiosRequestConfig): Promise<AxiosResponse<VersionList>>;
    /**
     * Publishes an GTFS Flex dataset that was previously uploaded via the [POST] /gtfs-flex endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers. Returns the job_id of the uploaded file. For checking the status of the upload, refer to the Location header in the response, which contains the URL for the status API endpoint.
     * @summary Publishes the GTFS Flex dataset for the tdei_dataset_id
     * @param {string} tdei_dataset_id tdei_dataset_id for a file, represented as a uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GTFSFlexApi
     */
    publishGtfsFlexFile(tdei_dataset_id: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * This path allows a user to upload pre-release GTFS Flex dataset. The caller must provide metadata about the file - includes information about how and when the data was collected and valid dates of the file. Returns the job_id of the uploaded file. For checking the status of the upload, refer to the Location header in the response, which contains the URL for the status API endpoint.
     * @summary upload a pre-release of GTFS Flex dataset.
     * @param {Blob} dataset
     * @param {Blob} metadata
     * @param {Blob} changeset
     * @param {string} tdei_project_group_id tdei project group id. Represented as UUID.
     * @param {string} tdei_service_id tdei service id associated with project group id. Represented as UUID.
     * @param {string} [derived_from_dataset_id] Dataset id from which this dataset was derived
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GTFSFlexApi
     */
    uploadGtfsFlexFileForm(dataset: Blob, metadata: Blob, changeset: Blob, tdei_project_group_id: string, tdei_service_id: string, derived_from_dataset_id?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
    /**
     * Allows a user to validate GTFS Flex dataset to check the correctness of data. Returns the job_id for validation request. For checking the status, refer to the Location header in the response, which contains the URL for the status API endpoint.
     * @summary Validates the GTFS Flex dataset.
     * @param {Blob} dataset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GTFSFlexApi
     */
    validateGtfsFlexFileForm(dataset: Blob, options?: AxiosRequestConfig): Promise<AxiosResponse<string>>;
}
