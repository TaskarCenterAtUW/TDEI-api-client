/* tslint:disable */
/* eslint-disable */
/**
 * TDEI Gateway Dev API
 * This is an API for interacting with the Transportation Data Equity Initiative (TDEI) system. It is intended for applications submitting data to and consuming data from the TDEI system. We currently support GTFS-Pathways, GTFS-Flex and OpenSidewalks (OSW) data schemas.
 *
 * OpenAPI spec version: v0.1
 * Contact: tdei@uw.edu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/**
 * 
 * @export
 * @interface MetadataModelMethodology
 */
export interface MetadataModelMethodology {
    /**
     * Point data collection device
     * @type {string}
     * @memberof MetadataModelMethodology
     */
    point_data_collection_device?: string;
    /**
     * Node locations and attributes editing software
     * @type {string}
     * @memberof MetadataModelMethodology
     */
    node_locations_and_attributes_editing_software?: string;
    /**
     * Is data collected by people
     * @type {boolean}
     * @memberof MetadataModelMethodology
     */
    data_collected_by_people?: boolean;
    /**
     * Data collectors
     * @type {string}
     * @memberof MetadataModelMethodology
     */
    data_collectors?: string;
    /**
     * Is data captured automatically
     * @type {boolean}
     * @memberof MetadataModelMethodology
     */
    data_captured_automatically?: boolean;
    /**
     * Automated collection
     * @type {string}
     * @memberof MetadataModelMethodology
     */
    automated_collection?: string;
    /**
     * Data collectors organization
     * @type {string}
     * @memberof MetadataModelMethodology
     */
    data_collectors_organization?: string;
    /**
     * Data collector compensation
     * @type {string}
     * @memberof MetadataModelMethodology
     */
    data_collector_compensation?: string;
    /**
     * Preprocessing location
     * @type {string}
     * @memberof MetadataModelMethodology
     */
    preprocessing_location?: string;
    /**
     * Preprocessing by
     * @type {string}
     * @memberof MetadataModelMethodology
     */
    preprocessing_by?: string;
    /**
     * Preprocessing steps
     * @type {string}
     * @memberof MetadataModelMethodology
     */
    preprocessing_steps?: string;
    /**
     * Is data collection preprocessing documentation available
     * @type {boolean}
     * @memberof MetadataModelMethodology
     */
    data_collection_preprocessing_documentation?: boolean;
    /**
     * Documentation URI
     * @type {string}
     * @memberof MetadataModelMethodology
     */
    documentation_uri?: string;
    /**
     * Is validation process exists
     * @type {boolean}
     * @memberof MetadataModelMethodology
     */
    validation_process_exists?: boolean;
    /**
     * Validation process description
     * @type {string}
     * @memberof MetadataModelMethodology
     */
    validation_process_description?: string;
    /**
     * Validation conducted by
     * @type {string}
     * @memberof MetadataModelMethodology
     */
    validation_conducted_by?: string;
    /**
     * Excluded data
     * @type {string}
     * @memberof MetadataModelMethodology
     */
    excluded_data?: string;
    /**
     * Excluded data reason
     * @type {string}
     * @memberof MetadataModelMethodology
     */
    excluded_data_reason?: string;
}
